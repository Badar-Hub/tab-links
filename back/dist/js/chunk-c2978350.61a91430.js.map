{"version":3,"sources":["webpack:///./node_modules/quasar/src/components/form/QForm.js","webpack:///./src/components/Layout/Modal.vue","webpack:///./src/components/Layout/Modal.vue?6662","webpack:///./src/components/Layout/Modal.vue?fe25","webpack:///./src/domain/categories/NewCategoryForm.vue","webpack:///./src/domain/categories/NewCategoryForm.vue?dfb5","webpack:///./src/domain/categories/NewCategoryForm.vue?4b88","webpack:///./src/components/Layout/Modal.vue?8e4f","webpack:///./src/domain/categories/CategoryList.vue","webpack:///./src/domain/categories/CategoryList.vue?c9b3","webpack:///./src/domain/categories/CategoryList.vue?7773","webpack:///./src/domain/categories/CategoryService.ts"],"names":["defineComponent","name","props","autofocus","Boolean","noErrorFocus","noResetFocus","greedy","onSubmit","Function","emits","setup","slots","emit","vm","getCurrentInstance","rootRef","ref","validateIndex","registeredComponents","validate","shouldFocus","promises","focus","emitEvent","res","i","comp","valid","then","push","error","Promise","resolve","length","index","all","errors","filter","r","resetValidation","forEach","submit","evt","stopAndPrevent","val","target","reset","nextTick","addFocusFn","value","querySelector","Array","prototype","find","call","querySelectorAll","el","tabIndex","provide","formKey","bindComponent","vmProxy","unbindComponent","indexOf","splice","onMounted","Object","assign","proxy","getValidationComponents","h","class","onReset","hSlot","default","style","width","title","icon","flat","round","dense","$emit","modelValue","type","String","render","QCard","QCardSection","QBtn","filled","category","label","lazy-rules","rules","color","isEditing","_","context","resetForm","_id","setToEdit","categoryData","CategoryService","updateCategory","newCategory","console","log","QForm","QInput","newCategoryAction","isLoading","data","tableDef","actions","editCategory","row","refreshList","categoryModal","components","NewCategoryForm","Modal","Table","categoryRef","categories","PagedResultModel","TableModel","getCategories","results","deleteCategory","id","get","baseUrl","post","put"],"mappings":"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","file":"js/chunk-c2978350.61a91430.js","sourcesContent":["import { h, defineComponent, ref, onMounted, getCurrentInstance, nextTick, provide } from 'vue'\n\nimport { stopAndPrevent } from '../../utils/event.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { formKey } from '../../utils/private/symbols.js'\n\nexport default defineComponent({\n  name: 'QForm',\n\n  props: {\n    autofocus: Boolean,\n    noErrorFocus: Boolean,\n    noResetFocus: Boolean,\n    greedy: Boolean,\n\n    onSubmit: Function\n  },\n\n  emits: [ 'reset', 'validation-success', 'validation-error' ],\n\n  setup (props, { slots, emit }) {\n    const vm = getCurrentInstance()\n    const rootRef = ref(null)\n\n    let validateIndex = 0\n    const registeredComponents = []\n\n    function validate (shouldFocus) {\n      const promises = []\n      const focus = typeof shouldFocus === 'boolean'\n        ? shouldFocus\n        : props.noErrorFocus !== true\n\n      validateIndex++\n\n      const emitEvent = (res, ref) => {\n        emit('validation-' + (res === true ? 'success' : 'error'), ref)\n      }\n\n      for (let i = 0; i < registeredComponents.length; i++) {\n        const comp = registeredComponents[ i ]\n        const valid = comp.validate()\n\n        if (typeof valid.then === 'function') {\n          promises.push(\n            valid.then(\n              valid => ({ valid, comp }),\n              error => ({ valid: false, comp, error })\n            )\n          )\n        }\n        else if (valid !== true) {\n          if (props.greedy === false) {\n            emitEvent(false, comp)\n\n            if (focus === true && typeof comp.focus === 'function') {\n              comp.focus()\n            }\n\n            return Promise.resolve(false)\n          }\n\n          promises.push({ valid: false, comp })\n        }\n      }\n\n      if (promises.length === 0) {\n        emitEvent(true)\n        return Promise.resolve(true)\n      }\n\n      const index = validateIndex\n\n      return Promise.all(promises).then(\n        res => {\n          if (index === validateIndex) {\n            const errors = res.filter(r => r.valid !== true)\n\n            if (errors.length === 0) {\n              emitEvent(true)\n              return true\n            }\n\n            const { valid, comp } = errors[ 0 ]\n\n            emitEvent(false, comp)\n\n            if (\n              focus === true\n              && valid !== true\n              && typeof comp.focus === 'function'\n            ) {\n              comp.focus()\n            }\n\n            return false\n          }\n        }\n      )\n    }\n\n    function resetValidation () {\n      validateIndex++\n\n      registeredComponents.forEach(comp => {\n        typeof comp.resetValidation === 'function' && comp.resetValidation()\n      })\n    }\n\n    function submit (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      validate().then(val => {\n        if (val === true) {\n          if (props.onSubmit !== void 0) {\n            emit('submit', evt)\n          }\n          else if (evt !== void 0 && evt.target !== void 0 && typeof evt.target.submit === 'function') {\n            evt.target.submit()\n          }\n        }\n      })\n    }\n\n    function reset (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      emit('reset')\n\n      nextTick(() => { // allow userland to reset values before\n        resetValidation()\n        if (props.autofocus === true && props.noResetFocus !== true) {\n          focus()\n        }\n      })\n    }\n\n    function focus () {\n      addFocusFn(() => {\n        if (rootRef.value === null) { return }\n\n        const target = rootRef.value.querySelector('[autofocus], [data-autofocus]')\n          || Array.prototype.find.call(rootRef.value.querySelectorAll('[tabindex]'), el => el.tabIndex > -1)\n\n        target !== null && target !== void 0 && target.focus()\n      })\n    }\n\n    provide(formKey, {\n      bindComponent (vmProxy) {\n        registeredComponents.push(vmProxy)\n      },\n\n      unbindComponent (vmProxy) {\n        const index = registeredComponents.indexOf(vmProxy)\n        if (index > -1) {\n          registeredComponents.splice(index, 1)\n        }\n      }\n    })\n\n    onMounted(() => {\n      props.autofocus === true && focus()\n    })\n\n    // expose public methods\n    Object.assign(vm.proxy, {\n      validate,\n      resetValidation,\n      submit,\n      reset,\n      focus,\n      getValidationComponents: () => registeredComponents\n    })\n\n    return () => h('form', {\n      class: 'q-form',\n      ref: rootRef,\n      onSubmit: submit,\n      onReset: reset\n    }, hSlot(slots.default))\n  }\n})\n","<template>\n  <div class=\"custom-dialog\">\n    <q-card v-show=\"modelValue\" class=\"modal\">\n      <div\n        :style=\"`max-width: ${width}; width: 100%;`\"\n        class=\"row items-center q-pb-none modal-content\"\n      >\n        <q-card-section class=\"full-width\">\n          <div class=\"row full-width justify-between\">\n            <div class=\"text-h6 q-my-none\">{{ title }}</div>\n            <q-btn icon=\"close\" flat round dense @click=\"$emit('close')\" />\n          </div>\n        </q-card-section>\n      </div>\n\n      <div\n        :style=\"`max-width: ${width}; width: 100%;`\"\n        class=\"row items-center q-pb-none modal-content\"\n      >\n        <q-card-section class=\"full-width\">\n          <slot></slot>\n        </q-card-section>\n      </div>\n    </q-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => '650px',\n    },\n    modelValue: {\n      type: Boolean\n    }\n  },\n  emits: ['close'],\n});\n</script>\n\n<style lang=\"scss\">\n.custom-dialog {\n  .modal {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    position: fixed;\n    z-index: 3000;\n\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(0, 0, 0);\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n\n  .q-card__section--vert {\n    padding: 0;\n  }\n\n  /* Modal Content/Box */\n  .modal-content {\n    background-color: #fefefe;\n    margin: 0 auto; /* 15% from the top and centered */\n    padding: 20px;\n    max-height: 500px;\n    overflow: auto;\n    border: 1px solid #888;\n  }\n\n  /* The Close Button */\n  .close {\n    color: #aaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n  }\n\n  .close:hover,\n  .close:focus {\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => '650px',\n    },\n    modelValue: {\n      type: Boolean\n    }\n  },\n  emits: ['close'],\n});\n","import { render } from \"./Modal.vue?vue&type=template&id=6b50f288\"\nimport script from \"./Modal.vue?vue&type=script&lang=ts\"\nexport * from \"./Modal.vue?vue&type=script&lang=ts\"\n\nimport \"./Modal.vue?vue&type=style&index=0&id=6b50f288&lang=scss\"\nscript.render = render\n\nexport default script\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCard,QCardSection,QBtn});\n","<template>\n  <q-form @submit=\"onSubmit\">\n    <div class=\"row\">\n      <div class=\"col-xs-12 q-px-sm q-my-sm\">\n        <q-input\n          filled\n          v-model=\"category.name\"\n          label=\"Category Name\"\n          lazy-rules\n          :rules=\"[(val) => (val && val.length > 0) || 'Please type something']\"\n        />\n      </div>\n      <div class=\"col-xs-12 q-my-sm\">\n        <q-btn\n          type=\"submit\"\n          label=\"Submit\"\n          color=\"primary\"\n          class=\"full-width\"\n        />\n      </div>\n    </div>\n  </q-form>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent } from 'vue';\nimport CategoryModel from './CategoryModel';\nimport CategoryService from './CategoryService';\n\nexport default defineComponent({\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  emits: ['close-modal'],\n  setup(_, context) {\n    const category = ref<CategoryModel>({\n      name: '',\n    });\n\n    const resetForm = () => {\n      category.value._id = '';\n      category.value.name = '';\n    };\n\n    const setToEdit = async (categoryData: CategoryModel) => {\n      category.value._id = categoryData._id;\n      category.value.name = categoryData.name;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (category.value._id) {\n          await CategoryService.updateCategory(category.value);\n        } else {\n          await CategoryService.newCategory(category.value);\n        }\n        context.emit('close-modal');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      category,\n    };\n  },\n});\n</script>\n\n<style></style>\n","\nimport { ref, defineComponent } from 'vue';\nimport CategoryModel from './CategoryModel';\nimport CategoryService from './CategoryService';\n\nexport default defineComponent({\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  emits: ['close-modal'],\n  setup(_, context) {\n    const category = ref<CategoryModel>({\n      name: '',\n    });\n\n    const resetForm = () => {\n      category.value._id = '';\n      category.value.name = '';\n    };\n\n    const setToEdit = async (categoryData: CategoryModel) => {\n      category.value._id = categoryData._id;\n      category.value.name = categoryData.name;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (category.value._id) {\n          await CategoryService.updateCategory(category.value);\n        } else {\n          await CategoryService.newCategory(category.value);\n        }\n        context.emit('close-modal');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      category,\n    };\n  },\n});\n","import { render } from \"./NewCategoryForm.vue?vue&type=template&id=5d91029a\"\nimport script from \"./NewCategoryForm.vue?vue&type=script&lang=ts\"\nexport * from \"./NewCategoryForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QBtn});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--0-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./Modal.vue?vue&type=style&index=0&id=6b50f288&lang=scss\"","<template>\n  <div>\n    <div class=\"q-pa-md\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-6 text-left\">\n          <h5 class=\"q-my-sm\">Category List</h5>\n        </div>\n        <div class=\"col-xs-12 col-sm-6 text-right\">\n          <q-btn\n            @click=\"newCategoryAction\"\n            label=\"Add New Category\"\n            color=\"primary\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <Table\n          class=\"full-width\"\n          :isLoading=\"isLoading\"\n          :data=\"data\"\n          :tableDef=\"tableDef\"\n        >\n          <template #actions=\"{ props }\">\n            <div class=\"row\">\n              <q-btn\n                class=\"q-pa-none\"\n                flat\n                round\n                color=\"primary\"\n                icon=\"edit\"\n                @click=\"editCategory(props.row)\"\n              />\n            </div>\n          </template>\n        </Table>\n      </div>\n    </div>\n    <modal\n      @close=\"refreshList\"\n      v-model=\"categoryModal\"\n      name=\"Add New Category\"\n      :title=\"isEditing ? 'Update Category' : 'Add New Category'\"\n    >\n      <NewCategoryForm\n        @closeModal=\"refreshList\"\n        ref=\"categoryRef\"\n        :isEditing=\"isEditing\"\n      />\n    </modal>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, onMounted } from 'vue';\nimport CategoryModel from './CategoryModel';\nimport NewCategoryForm from './NewCategoryForm.vue';\nimport CategoryService from './CategoryService';\nimport Modal from '../../components/Layout/Modal.vue';\nimport Column from '../../components/General/Table/ColumnModel';\nimport TableModel from '../../components/General/Table/TableModel';\nimport PagedResultModel from '../../interfaces/PagedResultModel';\nimport Table from '../../components/General/Table/Table.vue';\n\nexport default defineComponent({\n  components: {\n    NewCategoryForm,\n    Modal,\n    Table,\n  },\n  setup() {\n    const categoryModal = ref(false);\n    const categoryRef = ref();\n    const isEditing = ref(false);\n    const isLoading = ref(true);\n    const categories = ref<CategoryModel[]>([]);\n    const data = ref<PagedResultModel<CategoryModel>>(\n      new PagedResultModel<CategoryModel>()\n    );\n    const tableDef = ref<TableModel>(\n      new TableModel([\n        new Column('_id', 'ID'),\n        new Column('name', 'Name'),\n        new Column('actions', 'Actions', true),\n      ])\n    );\n\n    const getCategories = async () => {\n      try {\n        isLoading.value = true;\n        categories.value = await CategoryService.getCategories();\n        data.value.results = categories.value;\n        isLoading.value = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const newCategoryAction = () => {\n      isEditing.value = false;\n      categoryRef.value.resetForm();\n      categoryModal.value = !categoryModal.value;\n    };\n\n    const editCategory = async (category: CategoryModel) => {\n      isEditing.value = true;\n      categoryModal.value = true;\n      console.log('lol update category start');\n      categoryRef.value.setToEdit(category);\n      console.log('lol update category end');\n    };\n\n    const deleteCategory = (id: string) => {\n      console.log('lol delete category start', id);\n      console.log('lol delete category end', id);\n    };\n\n    const refreshList = async () => {\n      getCategories();\n      categoryModal.value = !categoryModal.value;\n      console.log(categoryModal.value);\n    };\n\n    onMounted(async () => {\n      try {\n        getCategories();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      data,\n      tableDef,\n      isLoading,\n      isEditing,\n      editCategory,\n      deleteCategory,\n      categories,\n      categoryModal,\n      refreshList,\n      categoryRef,\n      newCategoryAction,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\"></style>\n","\nimport { ref, defineComponent, onMounted } from 'vue';\nimport CategoryModel from './CategoryModel';\nimport NewCategoryForm from './NewCategoryForm.vue';\nimport CategoryService from './CategoryService';\nimport Modal from '../../components/Layout/Modal.vue';\nimport Column from '../../components/General/Table/ColumnModel';\nimport TableModel from '../../components/General/Table/TableModel';\nimport PagedResultModel from '../../interfaces/PagedResultModel';\nimport Table from '../../components/General/Table/Table.vue';\n\nexport default defineComponent({\n  components: {\n    NewCategoryForm,\n    Modal,\n    Table,\n  },\n  setup() {\n    const categoryModal = ref(false);\n    const categoryRef = ref();\n    const isEditing = ref(false);\n    const isLoading = ref(true);\n    const categories = ref<CategoryModel[]>([]);\n    const data = ref<PagedResultModel<CategoryModel>>(\n      new PagedResultModel<CategoryModel>()\n    );\n    const tableDef = ref<TableModel>(\n      new TableModel([\n        new Column('_id', 'ID'),\n        new Column('name', 'Name'),\n        new Column('actions', 'Actions', true),\n      ])\n    );\n\n    const getCategories = async () => {\n      try {\n        isLoading.value = true;\n        categories.value = await CategoryService.getCategories();\n        data.value.results = categories.value;\n        isLoading.value = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const newCategoryAction = () => {\n      isEditing.value = false;\n      categoryRef.value.resetForm();\n      categoryModal.value = !categoryModal.value;\n    };\n\n    const editCategory = async (category: CategoryModel) => {\n      isEditing.value = true;\n      categoryModal.value = true;\n      console.log('lol update category start');\n      categoryRef.value.setToEdit(category);\n      console.log('lol update category end');\n    };\n\n    const deleteCategory = (id: string) => {\n      console.log('lol delete category start', id);\n      console.log('lol delete category end', id);\n    };\n\n    const refreshList = async () => {\n      getCategories();\n      categoryModal.value = !categoryModal.value;\n      console.log(categoryModal.value);\n    };\n\n    onMounted(async () => {\n      try {\n        getCategories();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      data,\n      tableDef,\n      isLoading,\n      isEditing,\n      editCategory,\n      deleteCategory,\n      categories,\n      categoryModal,\n      refreshList,\n      categoryRef,\n      newCategoryAction,\n    };\n  },\n});\n","import { render } from \"./CategoryList.vue?vue&type=template&id=d148002e\"\nimport script from \"./CategoryList.vue?vue&type=script&lang=ts\"\nexport * from \"./CategoryList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn});\n","import { ApiService } from \"@/services/ApiServices\";\nimport CategoryModel from \"./CategoryModel\";\n\nexport default class CategoryService {\n  static baseUrl = \"categories\";\n  static async getCategories() {\n    try {\n      const data = await ApiService.get(CategoryService.baseUrl);\n      return data.results.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async newCategory(category: CategoryModel) {\n    try {\n      const data = await ApiService.post(`${CategoryService.baseUrl}`, category);\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async updateCategory(category: CategoryModel) {\n    try {\n      const data = await ApiService.put(\n        `${CategoryService.baseUrl}/${category._id}`,\n        category\n      );\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"],"sourceRoot":""}