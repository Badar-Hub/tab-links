{"version":3,"sources":["webpack:///./node_modules/quasar/src/components/form/QForm.js","webpack:///./src/components/Layout/Modal.vue","webpack:///./src/components/Layout/Modal.vue?6662","webpack:///./src/components/Layout/Modal.vue?fe25","webpack:///./src/domain/products/ProductService.ts","webpack:///./src/domain/products/ProductList.vue","webpack:///./src/domain/products/ProductList.vue?cebd","webpack:///./src/domain/products/ProductList.vue?080d","webpack:///./src/components/Layout/Modal.vue?8e4f","webpack:///./src/domain/brands/BrandsService.ts","webpack:///./src/domain/categories/CategoryService.ts","webpack:///./src/domain/products/NewProductForm.vue","webpack:///./src/domain/products/NewProductForm.vue?9683","webpack:///./src/domain/products/NewProductForm.vue?491e"],"names":["defineComponent","name","props","autofocus","Boolean","noErrorFocus","noResetFocus","greedy","onSubmit","Function","emits","setup","slots","emit","vm","getCurrentInstance","rootRef","ref","validateIndex","registeredComponents","validate","shouldFocus","promises","focus","emitEvent","res","i","comp","valid","then","push","error","Promise","resolve","length","index","all","errors","filter","r","resetValidation","forEach","submit","evt","stopAndPrevent","val","target","reset","nextTick","addFocusFn","value","querySelector","Array","prototype","find","call","querySelectorAll","el","tabIndex","provide","formKey","bindComponent","vmProxy","unbindComponent","indexOf","splice","onMounted","Object","assign","proxy","getValidationComponents","h","class","onReset","hSlot","default","style","width","title","icon","flat","round","dense","$emit","modelValue","type","String","render","QCard","QCardSection","QBtn","ProductService","get","baseUrl","data","results","console","log","product","post","put","_id","newProductAction","label","color","isLoading","tableDef","actions","editProduct","row","productModal","isEditing","refreshList","components","NewProductForm","Modal","Table","productRef","products","PagedResultModel","TableModel","getProducts","resetForm","setToEdit","deleteProduct","id","BrandService","brand","CategoryService","category","filled","sku","lazy-rules","rules","options","brands","categories","price","discount","costPrice","_","context","quantity","productData","updateProduct","newProducts","BrandsService","getBrands","allBrands","map","getCategories","allCategories","QForm","QInput","QSelect"],"mappings":"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","file":"js/chunk-4daf4b57.ae3e693c.js","sourcesContent":["import { h, defineComponent, ref, onMounted, getCurrentInstance, nextTick, provide } from 'vue'\n\nimport { stopAndPrevent } from '../../utils/event.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { formKey } from '../../utils/private/symbols.js'\n\nexport default defineComponent({\n  name: 'QForm',\n\n  props: {\n    autofocus: Boolean,\n    noErrorFocus: Boolean,\n    noResetFocus: Boolean,\n    greedy: Boolean,\n\n    onSubmit: Function\n  },\n\n  emits: [ 'reset', 'validation-success', 'validation-error' ],\n\n  setup (props, { slots, emit }) {\n    const vm = getCurrentInstance()\n    const rootRef = ref(null)\n\n    let validateIndex = 0\n    const registeredComponents = []\n\n    function validate (shouldFocus) {\n      const promises = []\n      const focus = typeof shouldFocus === 'boolean'\n        ? shouldFocus\n        : props.noErrorFocus !== true\n\n      validateIndex++\n\n      const emitEvent = (res, ref) => {\n        emit('validation-' + (res === true ? 'success' : 'error'), ref)\n      }\n\n      for (let i = 0; i < registeredComponents.length; i++) {\n        const comp = registeredComponents[ i ]\n        const valid = comp.validate()\n\n        if (typeof valid.then === 'function') {\n          promises.push(\n            valid.then(\n              valid => ({ valid, comp }),\n              error => ({ valid: false, comp, error })\n            )\n          )\n        }\n        else if (valid !== true) {\n          if (props.greedy === false) {\n            emitEvent(false, comp)\n\n            if (focus === true && typeof comp.focus === 'function') {\n              comp.focus()\n            }\n\n            return Promise.resolve(false)\n          }\n\n          promises.push({ valid: false, comp })\n        }\n      }\n\n      if (promises.length === 0) {\n        emitEvent(true)\n        return Promise.resolve(true)\n      }\n\n      const index = validateIndex\n\n      return Promise.all(promises).then(\n        res => {\n          if (index === validateIndex) {\n            const errors = res.filter(r => r.valid !== true)\n\n            if (errors.length === 0) {\n              emitEvent(true)\n              return true\n            }\n\n            const { valid, comp } = errors[ 0 ]\n\n            emitEvent(false, comp)\n\n            if (\n              focus === true\n              && valid !== true\n              && typeof comp.focus === 'function'\n            ) {\n              comp.focus()\n            }\n\n            return false\n          }\n        }\n      )\n    }\n\n    function resetValidation () {\n      validateIndex++\n\n      registeredComponents.forEach(comp => {\n        typeof comp.resetValidation === 'function' && comp.resetValidation()\n      })\n    }\n\n    function submit (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      validate().then(val => {\n        if (val === true) {\n          if (props.onSubmit !== void 0) {\n            emit('submit', evt)\n          }\n          else if (evt !== void 0 && evt.target !== void 0 && typeof evt.target.submit === 'function') {\n            evt.target.submit()\n          }\n        }\n      })\n    }\n\n    function reset (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      emit('reset')\n\n      nextTick(() => { // allow userland to reset values before\n        resetValidation()\n        if (props.autofocus === true && props.noResetFocus !== true) {\n          focus()\n        }\n      })\n    }\n\n    function focus () {\n      addFocusFn(() => {\n        if (rootRef.value === null) { return }\n\n        const target = rootRef.value.querySelector('[autofocus], [data-autofocus]')\n          || Array.prototype.find.call(rootRef.value.querySelectorAll('[tabindex]'), el => el.tabIndex > -1)\n\n        target !== null && target !== void 0 && target.focus()\n      })\n    }\n\n    provide(formKey, {\n      bindComponent (vmProxy) {\n        registeredComponents.push(vmProxy)\n      },\n\n      unbindComponent (vmProxy) {\n        const index = registeredComponents.indexOf(vmProxy)\n        if (index > -1) {\n          registeredComponents.splice(index, 1)\n        }\n      }\n    })\n\n    onMounted(() => {\n      props.autofocus === true && focus()\n    })\n\n    // expose public methods\n    Object.assign(vm.proxy, {\n      validate,\n      resetValidation,\n      submit,\n      reset,\n      focus,\n      getValidationComponents: () => registeredComponents\n    })\n\n    return () => h('form', {\n      class: 'q-form',\n      ref: rootRef,\n      onSubmit: submit,\n      onReset: reset\n    }, hSlot(slots.default))\n  }\n})\n","<template>\n  <div class=\"custom-dialog\">\n    <q-card v-show=\"modelValue\" class=\"modal\">\n      <div\n        :style=\"`max-width: ${width}; width: 100%;`\"\n        class=\"row items-center q-pb-none modal-content\"\n      >\n        <q-card-section class=\"full-width\">\n          <div class=\"row full-width justify-between\">\n            <div class=\"text-h6 q-my-none\">{{ title }}</div>\n            <q-btn icon=\"close\" flat round dense @click=\"$emit('close')\" />\n          </div>\n        </q-card-section>\n      </div>\n\n      <div\n        :style=\"`max-width: ${width}; width: 100%;`\"\n        class=\"row items-center q-pb-none modal-content\"\n      >\n        <q-card-section class=\"full-width\">\n          <slot></slot>\n        </q-card-section>\n      </div>\n    </q-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => '650px',\n    },\n    modelValue: {\n      type: Boolean\n    }\n  },\n  emits: ['close'],\n});\n</script>\n\n<style lang=\"scss\">\n.custom-dialog {\n  .modal {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    position: fixed;\n    z-index: 3000;\n\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(0, 0, 0);\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n\n  .q-card__section--vert {\n    padding: 0;\n  }\n\n  /* Modal Content/Box */\n  .modal-content {\n    background-color: #fefefe;\n    margin: 0 auto; /* 15% from the top and centered */\n    padding: 20px;\n    max-height: 500px;\n    overflow: auto;\n    border: 1px solid #888;\n  }\n\n  /* The Close Button */\n  .close {\n    color: #aaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n  }\n\n  .close:hover,\n  .close:focus {\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => '650px',\n    },\n    modelValue: {\n      type: Boolean\n    }\n  },\n  emits: ['close'],\n});\n","import { render } from \"./Modal.vue?vue&type=template&id=6b50f288\"\nimport script from \"./Modal.vue?vue&type=script&lang=ts\"\nexport * from \"./Modal.vue?vue&type=script&lang=ts\"\n\nimport \"./Modal.vue?vue&type=style&index=0&id=6b50f288&lang=scss\"\nscript.render = render\n\nexport default script\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCard,QCardSection,QBtn});\n","import { ApiService } from \"@/services/ApiServices\";\nimport ProductModel from \"./ProductModel\";\n\nexport default class ProductService {\n  static baseUrl = \"products\";\n  static async getProducts() {\n    try {\n      const data = await ApiService.get(ProductService.baseUrl);\n      return data.results.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async newProducts(product: ProductModel) {\n    try {\n      const data = await ApiService.post(`${ProductService.baseUrl}`, product);\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async updateProduct(product: ProductModel) {\n    try {\n      const data = await ApiService.put(\n        `${ProductService.baseUrl}/${product._id}`,\n        product\n      );\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<template>\n  <div>\n    <div class=\"q-pa-md\">\n      <div class=\"row\">\n        <div class=\"col-xs-6 text-left\">\n          <h5 class=\"q-my-sm\">Product List</h5>\n        </div>\n        <div class=\"col-xs-6 text-right\">\n          <q-btn\n            @click=\"newProductAction\"\n            label=\"Add New Product\"\n            color=\"primary\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <Table\n          class=\"full-width\"\n          :isLoading=\"isLoading\"\n          :data=\"data\"\n          :tableDef=\"tableDef\"\n        >\n          <template #actions=\"{ props }\">\n            <div class=\"row\">\n              <q-btn\n                class=\"q-pa-none\"\n                flat\n                round\n                color=\"primary\"\n                icon=\"edit\"\n                @click=\"editProduct(props.row)\"\n              />\n            </div>\n          </template>\n        </Table>\n      </div>\n    </div>\n    <modal\n      @close=\"productModal = !productModal\"\n      :title=\"isEditing ? 'Update Product' : 'Add New Product'\"\n      v-model=\"productModal\"\n    >\n      <NewProductForm\n        ref=\"productRef\"\n        :isEditing=\"isEditing\"\n        v-model=\"productModal\"\n        @closeModal=\"refreshList\"\n      />\n    </modal>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, onMounted } from 'vue';\n// import ProductCard from './ProductCard.vue';\nimport NewProductForm from './NewProductForm.vue';\nimport ProductModel from './ProductModel';\nimport ProductService from './ProductService';\nimport TableModel from '../../components/General/Table/TableModel';\nimport PagedResultModel from '../../interfaces/PagedResultModel';\nimport Table from '../../components/General/Table/Table.vue';\nimport Column from '../../components/General/Table/ColumnModel';\nimport Modal from '../../components/Layout/Modal.vue';\n\nexport default defineComponent({\n  components: {\n    // ProductCard,\n    NewProductForm,\n    Modal,\n    Table,\n  },\n  setup() {\n    const productModal = ref(false);\n    const productRef = ref();\n    const isEditing = ref(false);\n    const isLoading = ref(true);\n    const products = ref<ProductModel[]>([]);\n    const data = ref<PagedResultModel<ProductModel>>(\n      new PagedResultModel<ProductModel>()\n    );\n    const tableDef = ref<TableModel>(\n      new TableModel([\n        new Column('sku', 'Sku'),\n        new Column('name', 'Name'),\n        new Column('brand', 'Brand'),\n        new Column('category', 'Category'),\n        new Column('price', 'Price'),\n        new Column('discount', 'Discount'),\n        new Column('quantity', 'Quantity'),\n        new Column('actions', 'Actions', true),\n      ])\n    );\n\n    const getProducts = async () => {\n      try {\n        isLoading.value = true;\n        products.value = await ProductService.getProducts();\n        data.value.results = products.value\n        isLoading.value = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const newProductAction = () => {\n      isEditing.value = false;\n      productRef.value.resetForm();\n      productModal.value = true;\n    };\n\n    const editProduct = (product: ProductModel) => {\n      isEditing.value = true;\n      productRef.value.setToEdit(product);\n      productModal.value = true;\n    };\n\n    const deleteProduct = (id: string) => {\n      console.log(id);\n    };\n\n    const refreshList = async () => {\n      console.log('reset-list');\n      getProducts();\n      productModal.value = !productModal.value;\n    };\n\n    onMounted(async () => {\n      try {\n        getProducts();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      data,\n      tableDef,\n      products,\n      isLoading,\n      isEditing,\n      productModal,\n      productRef,\n      refreshList,\n      editProduct,\n      deleteProduct,\n      newProductAction,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\"></style>\n","\nimport { ref, defineComponent, onMounted } from 'vue';\n// import ProductCard from './ProductCard.vue';\nimport NewProductForm from './NewProductForm.vue';\nimport ProductModel from './ProductModel';\nimport ProductService from './ProductService';\nimport TableModel from '../../components/General/Table/TableModel';\nimport PagedResultModel from '../../interfaces/PagedResultModel';\nimport Table from '../../components/General/Table/Table.vue';\nimport Column from '../../components/General/Table/ColumnModel';\nimport Modal from '../../components/Layout/Modal.vue';\n\nexport default defineComponent({\n  components: {\n    // ProductCard,\n    NewProductForm,\n    Modal,\n    Table,\n  },\n  setup() {\n    const productModal = ref(false);\n    const productRef = ref();\n    const isEditing = ref(false);\n    const isLoading = ref(true);\n    const products = ref<ProductModel[]>([]);\n    const data = ref<PagedResultModel<ProductModel>>(\n      new PagedResultModel<ProductModel>()\n    );\n    const tableDef = ref<TableModel>(\n      new TableModel([\n        new Column('sku', 'Sku'),\n        new Column('name', 'Name'),\n        new Column('brand', 'Brand'),\n        new Column('category', 'Category'),\n        new Column('price', 'Price'),\n        new Column('discount', 'Discount'),\n        new Column('quantity', 'Quantity'),\n        new Column('actions', 'Actions', true),\n      ])\n    );\n\n    const getProducts = async () => {\n      try {\n        isLoading.value = true;\n        products.value = await ProductService.getProducts();\n        data.value.results = products.value\n        isLoading.value = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const newProductAction = () => {\n      isEditing.value = false;\n      productRef.value.resetForm();\n      productModal.value = true;\n    };\n\n    const editProduct = (product: ProductModel) => {\n      isEditing.value = true;\n      productRef.value.setToEdit(product);\n      productModal.value = true;\n    };\n\n    const deleteProduct = (id: string) => {\n      console.log(id);\n    };\n\n    const refreshList = async () => {\n      console.log('reset-list');\n      getProducts();\n      productModal.value = !productModal.value;\n    };\n\n    onMounted(async () => {\n      try {\n        getProducts();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      data,\n      tableDef,\n      products,\n      isLoading,\n      isEditing,\n      productModal,\n      productRef,\n      refreshList,\n      editProduct,\n      deleteProduct,\n      newProductAction,\n    };\n  },\n});\n","import { render } from \"./ProductList.vue?vue&type=template&id=0ecc0642\"\nimport script from \"./ProductList.vue?vue&type=script&lang=ts\"\nexport * from \"./ProductList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--0-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./Modal.vue?vue&type=style&index=0&id=6b50f288&lang=scss\"","import { ApiService } from \"@/services/ApiServices\";\nimport BrandModel from \"./BrandModel\";\n\nexport default class BrandService {\n  static baseUrl = \"brands\";\n  static async getBrands() {\n    try {\n      const data = await ApiService.get(BrandService.baseUrl);\n      return data.results.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async newBrand(brand: BrandModel) {\n    try {\n      const data = await ApiService.post(`${BrandService.baseUrl}`, brand);\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async updateBrand(brand: BrandModel) {\n    try {\n      const data = await ApiService.put(\n        `${BrandService.baseUrl}/${brand._id}`,\n        brand\n      );\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","import { ApiService } from \"@/services/ApiServices\";\nimport CategoryModel from \"./CategoryModel\";\n\nexport default class CategoryService {\n  static baseUrl = \"categories\";\n  static async getCategories() {\n    try {\n      const data = await ApiService.get(CategoryService.baseUrl);\n      return data.results.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async newCategory(category: CategoryModel) {\n    try {\n      const data = await ApiService.post(`${CategoryService.baseUrl}`, category);\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async updateCategory(category: CategoryModel) {\n    try {\n      const data = await ApiService.put(\n        `${CategoryService.baseUrl}/${category._id}`,\n        category\n      );\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<template>\n    <q-form @submit=\"onSubmit\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-input\n            filled\n            v-model=\"product.sku\"\n            label=\"Sku\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-input\n            filled\n            v-model=\"product.name\"\n            label=\"Product Name\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-select\n            filled\n            v-model=\"product.brand\"\n            :options=\"brands\"\n            label=\"Brands\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please enter a valid value',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-select\n            filled\n            v-model=\"product.category\"\n            :options=\"categories\"\n            label=\"Category\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please enter a valid value',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-input\n            filled\n            v-model=\"product.price\"\n            type=\"number\"\n            label=\"Price\"\n            lazy-rules\n            :rules=\"[(val) => val > 0 || 'Please enter a valid value']\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-input\n            filled\n            v-model=\"product.discount\"\n            type=\"number\"\n            label=\"Discount\"\n            lazy-rules\n            :rules=\"[(val) => val >= 0 || 'Please enter a valid value']\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-input\n            filled\n            v-model=\"product.costPrice\"\n            type=\"number\"\n            label=\"Cost Price\"\n            lazy-rules\n            :rules=\"[(val) => val > 0 || 'Please enter a valid value']\"\n          />\n        </div>\n        <div class=\"col-xs-12 q-my-xs\">\n          <q-btn\n            type=\"submit\"\n            label=\"Submit\"\n            color=\"primary\"\n            class=\"full-width\"\n          />\n        </div>\n      </div>\n    </q-form>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, onMounted } from 'vue';\nimport ProductModel from './ProductModel';\nimport CategoryModel from '../categories/CategoryModel';\nimport BrandModel from '../brands/BrandModel';\nimport ProductService from './ProductService';\nimport BrandsService from '../brands/BrandsService';\nimport CategoryService from '../categories/CategoryService';\n\nexport default defineComponent({\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  emits: ['close-modal'],\n  setup(_, context) {\n    const brands = ref([]);\n    const categories = ref([]);\n\n    const product = ref<ProductModel>({\n      sku: '',\n      name: '',\n      brand: '',\n      category: '',\n      price: 0,\n      discount: 0,\n      quantity: 0,\n      costPrice: 0,\n    });\n\n    const resetForm = () => {\n      product.value._id = '';\n      product.value.sku = '';\n      product.value.name = '';\n      product.value.brand = '';\n      product.value.category = '';\n      product.value.price = 0;\n      product.value.discount = 0;\n      product.value.quantity = 0;\n      product.value.costPrice = 0;\n    };\n\n    const setToEdit = (productData: ProductModel) => {\n      product.value._id = productData._id;\n      product.value.sku = productData.sku;\n      product.value.name = productData.name;\n      product.value.brand = productData.brand;\n      product.value.category = productData.category;\n      product.value.price = productData.price;\n      product.value.discount = productData.discount;\n      product.value.quantity = productData.quantity;\n      product.value.costPrice = productData.costPrice;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (product.value._id) {\n          await ProductService.updateProduct(product.value);\n        } else {\n          await ProductService.newProducts(product.value);\n        }\n        console.log(product.value);\n        context.emit('close-modal');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    onMounted(async () => {\n      try {\n        const allBrands = await BrandsService.getBrands();\n        brands.value = allBrands.map((brand: BrandModel) => brand.name);\n        const allCategories = await CategoryService.getCategories();\n        categories.value = allCategories.map(\n          (category: CategoryModel) => category.name\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      setToEdit,\n      onSubmit,\n      resetForm,\n      product,\n      brands,\n      categories,\n    };\n  },\n});\n</script>\n\n<style></style>\n","\nimport { ref, defineComponent, onMounted } from 'vue';\nimport ProductModel from './ProductModel';\nimport CategoryModel from '../categories/CategoryModel';\nimport BrandModel from '../brands/BrandModel';\nimport ProductService from './ProductService';\nimport BrandsService from '../brands/BrandsService';\nimport CategoryService from '../categories/CategoryService';\n\nexport default defineComponent({\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  emits: ['close-modal'],\n  setup(_, context) {\n    const brands = ref([]);\n    const categories = ref([]);\n\n    const product = ref<ProductModel>({\n      sku: '',\n      name: '',\n      brand: '',\n      category: '',\n      price: 0,\n      discount: 0,\n      quantity: 0,\n      costPrice: 0,\n    });\n\n    const resetForm = () => {\n      product.value._id = '';\n      product.value.sku = '';\n      product.value.name = '';\n      product.value.brand = '';\n      product.value.category = '';\n      product.value.price = 0;\n      product.value.discount = 0;\n      product.value.quantity = 0;\n      product.value.costPrice = 0;\n    };\n\n    const setToEdit = (productData: ProductModel) => {\n      product.value._id = productData._id;\n      product.value.sku = productData.sku;\n      product.value.name = productData.name;\n      product.value.brand = productData.brand;\n      product.value.category = productData.category;\n      product.value.price = productData.price;\n      product.value.discount = productData.discount;\n      product.value.quantity = productData.quantity;\n      product.value.costPrice = productData.costPrice;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (product.value._id) {\n          await ProductService.updateProduct(product.value);\n        } else {\n          await ProductService.newProducts(product.value);\n        }\n        console.log(product.value);\n        context.emit('close-modal');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    onMounted(async () => {\n      try {\n        const allBrands = await BrandsService.getBrands();\n        brands.value = allBrands.map((brand: BrandModel) => brand.name);\n        const allCategories = await CategoryService.getCategories();\n        categories.value = allCategories.map(\n          (category: CategoryModel) => category.name\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      setToEdit,\n      onSubmit,\n      resetForm,\n      product,\n      brands,\n      categories,\n    };\n  },\n});\n","import { render } from \"./NewProductForm.vue?vue&type=template&id=ef519ddc\"\nimport script from \"./NewProductForm.vue?vue&type=script&lang=ts\"\nexport * from \"./NewProductForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QSelect,QBtn});\n"],"sourceRoot":""}