{"version":3,"sources":["webpack:///./node_modules/quasar/src/components/form/QForm.js","webpack:///./src/domain/customers/CustomerList.vue","webpack:///./src/domain/customers/CustomerCard.vue","webpack:///./src/domain/customers/CustomerCard.vue?2b9c","webpack:///./src/domain/customers/CustomerCard.vue?7b97","webpack:///./src/domain/customers/CustomerList.vue?2c2a","webpack:///./src/domain/customers/CustomerList.vue?e8b9","webpack:///./node_modules/quasar/src/directives/ClosePopup.js","webpack:///./src/domain/customers/CustomerService.ts","webpack:///./src/domain/customers/NewCustomerModal.vue","webpack:///./src/domain/customers/NewCustomerModal.vue?93f1","webpack:///./src/domain/customers/NewCustomerModal.vue?6295","webpack:///./src/components/General/Modal.vue","webpack:///./src/components/General/Modal.vue?b930","webpack:///./node_modules/quasar/src/components/space/QSpace.js","webpack:///./src/components/General/Modal.vue?620c"],"names":["defineComponent","name","props","autofocus","Boolean","noErrorFocus","noResetFocus","greedy","onSubmit","Function","emits","setup","slots","emit","vm","getCurrentInstance","rootRef","ref","validateIndex","registeredComponents","validate","shouldFocus","promises","focus","emitEvent","res","i","comp","valid","then","push","error","Promise","resolve","length","index","all","errors","filter","r","resetValidation","forEach","submit","evt","stopAndPrevent","val","target","reset","nextTick","addFocusFn","value","querySelector","Array","prototype","find","call","querySelectorAll","el","tabIndex","provide","formKey","bindComponent","vmProxy","unbindComponent","indexOf","splice","onMounted","Object","assign","proxy","getValidationComponents","h","class","onReset","hSlot","default","newCustomerAction","label","color","customers","customer","key","editCustomer","deleteCustomer","id","isEditing","customerModal","refreshList","phone","bankName","accountNo","address","balance","createdAt","$emit","type","render","QCard","QCardSection","QBtn","components","CustomerCard","NewCustomerModal","customerRef","getCustomers","CustomerService","console","log","resetForm","setToEdit","getDepth","depth","parseInt","isNaN","__QUASAR_SSR_SERVER__","beforeMount","ctx","handler","setTimeout","getPortalVm","closePortals","handlerKey","isKeyCode","__qclosepopup","addEventListener","updated","oldValue","beforeUnmount","removeEventListener","get","baseUrl","data","results","post","put","_id","width","title","filled","lazy-rules","rules","mask","disable","openingBalance","Modal","_","context","customerData","updateCustomer","newCustomer","QForm","QInput","$attrs","style","icon","flat","round","dense","String","space","QDialog","QSpace","ClosePopup"],"mappings":"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","file":"js/chunk-96beff00.b6663229.js","sourcesContent":["import { h, defineComponent, ref, onMounted, getCurrentInstance, nextTick, provide } from 'vue'\n\nimport { stopAndPrevent } from '../../utils/event.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { formKey } from '../../utils/private/symbols.js'\n\nexport default defineComponent({\n  name: 'QForm',\n\n  props: {\n    autofocus: Boolean,\n    noErrorFocus: Boolean,\n    noResetFocus: Boolean,\n    greedy: Boolean,\n\n    onSubmit: Function\n  },\n\n  emits: [ 'reset', 'validation-success', 'validation-error' ],\n\n  setup (props, { slots, emit }) {\n    const vm = getCurrentInstance()\n    const rootRef = ref(null)\n\n    let validateIndex = 0\n    const registeredComponents = []\n\n    function validate (shouldFocus) {\n      const promises = []\n      const focus = typeof shouldFocus === 'boolean'\n        ? shouldFocus\n        : props.noErrorFocus !== true\n\n      validateIndex++\n\n      const emitEvent = (res, ref) => {\n        emit('validation-' + (res === true ? 'success' : 'error'), ref)\n      }\n\n      for (let i = 0; i < registeredComponents.length; i++) {\n        const comp = registeredComponents[ i ]\n        const valid = comp.validate()\n\n        if (typeof valid.then === 'function') {\n          promises.push(\n            valid.then(\n              valid => ({ valid, comp }),\n              error => ({ valid: false, comp, error })\n            )\n          )\n        }\n        else if (valid !== true) {\n          if (props.greedy === false) {\n            emitEvent(false, comp)\n\n            if (focus === true && typeof comp.focus === 'function') {\n              comp.focus()\n            }\n\n            return Promise.resolve(false)\n          }\n\n          promises.push({ valid: false, comp })\n        }\n      }\n\n      if (promises.length === 0) {\n        emitEvent(true)\n        return Promise.resolve(true)\n      }\n\n      const index = validateIndex\n\n      return Promise.all(promises).then(\n        res => {\n          if (index === validateIndex) {\n            const errors = res.filter(r => r.valid !== true)\n\n            if (errors.length === 0) {\n              emitEvent(true)\n              return true\n            }\n\n            const { valid, comp } = errors[ 0 ]\n\n            emitEvent(false, comp)\n\n            if (\n              focus === true\n              && valid !== true\n              && typeof comp.focus === 'function'\n            ) {\n              comp.focus()\n            }\n\n            return false\n          }\n        }\n      )\n    }\n\n    function resetValidation () {\n      validateIndex++\n\n      registeredComponents.forEach(comp => {\n        typeof comp.resetValidation === 'function' && comp.resetValidation()\n      })\n    }\n\n    function submit (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      validate().then(val => {\n        if (val === true) {\n          if (props.onSubmit !== void 0) {\n            emit('submit', evt)\n          }\n          else if (evt !== void 0 && evt.target !== void 0 && typeof evt.target.submit === 'function') {\n            evt.target.submit()\n          }\n        }\n      })\n    }\n\n    function reset (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      emit('reset')\n\n      nextTick(() => { // allow userland to reset values before\n        resetValidation()\n        if (props.autofocus === true && props.noResetFocus !== true) {\n          focus()\n        }\n      })\n    }\n\n    function focus () {\n      addFocusFn(() => {\n        if (rootRef.value === null) { return }\n\n        const target = rootRef.value.querySelector('[autofocus], [data-autofocus]')\n          || Array.prototype.find.call(rootRef.value.querySelectorAll('[tabindex]'), el => el.tabIndex > -1)\n\n        target !== null && target !== void 0 && target.focus()\n      })\n    }\n\n    provide(formKey, {\n      bindComponent (vmProxy) {\n        registeredComponents.push(vmProxy)\n      },\n\n      unbindComponent (vmProxy) {\n        const index = registeredComponents.indexOf(vmProxy)\n        if (index > -1) {\n          registeredComponents.splice(index, 1)\n        }\n      }\n    })\n\n    onMounted(() => {\n      props.autofocus === true && focus()\n    })\n\n    // expose public methods\n    Object.assign(vm.proxy, {\n      validate,\n      resetValidation,\n      submit,\n      reset,\n      focus,\n      getValidationComponents: () => registeredComponents\n    })\n\n    return () => h('form', {\n      class: 'q-form',\n      ref: rootRef,\n      onSubmit: submit,\n      onReset: reset\n    }, hSlot(slots.default))\n  }\n})\n","<template>\n  <div>\n    <div class=\"q-pa-md\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-6 text-left\">\n          <h5 class=\"q-my-sm\">Customers List</h5>\n        </div>\n        <div class=\"col-xs-12 col-sm-6 text-right\">\n          <q-btn\n            @click=\"newCustomerAction\"\n            label=\"Add New Customer\"\n            color=\"primary\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div\n          v-for=\"(customer, i) in customers\"\n          :key=\"i\"\n          class=\"col-xs-12 col-sm-4 q-pa-sm\"\n        >\n          <CustomerCard\n            @editAction=\"editCustomer(customer)\"\n            @deleteAction=\"deleteCustomer(customer.id)\"\n            :customer=\"customer\"\n          />\n        </div>\n      </div>\n    </div>\n    <NewCustomerModal\n      ref=\"customerRef\"\n      :isEditing=\"isEditing\"\n      v-model=\"customerModal\"\n      @close=\"refreshList\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, onMounted } from 'vue';\nimport CustomerCard from './CustomerCard.vue';\nimport NewCustomerModal from './NewCustomerModal.vue';\nimport CustomerService from './CustomerService';\nimport CustomerModel from './CustomerModel';\n\nexport default defineComponent({\n  components: {\n    CustomerCard,\n    NewCustomerModal,\n  },\n  setup() {\n    const customerModal = ref(false);\n    const customerRef = ref();\n    const customers = ref<CustomerModel[]>([]);\n    const isEditing = ref(false);\n\n    const getCustomers = async () => {\n      try {\n        customers.value = await CustomerService.getCustomers();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    // const vendors = [\n    //   {\n    //     id: '50-',\n    //     name: 'Hello',\n    //     phone: '03321021700',\n    //     bankName: 'HBL',\n    //     accountNo: '23997980857903',\n    //     balance: 500,\n    //     address: 'DHA',\n    //     createdAt: '12-01-2020',\n    //   },\n    //   {\n    //     id: '50-',\n    //     name: 'Hello',\n    //     phone: '03321021700',\n    //     bankName: 'HBL',\n    //     accountNo: '23997980857903',\n    //     balance: 500,\n    //     address: 'DHA',\n    //     createdAt: '12-01-2020',\n    //   },\n    // ];\n\n    const newCustomerAction = () => {\n      isEditing.value = false;\n      customerRef.value.resetForm();\n      customerModal.value = true;\n    };\n\n    const deleteCustomer = async (id: string) => {\n      console.log(`Delete Brand ${id}`);\n    };\n\n    const editCustomer = async (customer: CustomerModel) => {\n      isEditing.value = true;\n      customerRef.value.setToEdit(customer);\n      customerModal.value = true;\n    };\n\n    const refreshList = async () => {\n      console.log('reset-list');\n      getCustomers();\n      customerModal.value = !customerModal.value;\n    };\n\n    onMounted(async () => {\n      getCustomers();\n    });\n\n    return {\n      customers,\n      customerRef,\n      editCustomer,\n      isEditing,\n      customerModal,\n      deleteCustomer,\n      refreshList,\n      newCustomerAction,\n    };\n  },\n});\n</script>\n","<template>\n  <div class=\"row\">\n    <q-card>\n      <q-card-section>\n        <div class=\"row\">\n          <div class=\"col-xs-12\">\n            <h6 class=\"q-my-sm\">Name: {{ customer.name }}</h6>\n          </div>\n          <div class=\"col-xs-12\">\n            <h6 class=\"q-my-sm\">Phone: {{ customer.phone }}</h6>\n          </div>\n          <div class=\"col-xs-12\">\n            <h6 class=\"q-my-sm\">Bank Name: {{ customer.bankName }}</h6>\n          </div>\n          <div class=\"col-xs-12\">\n            <h6 class=\"q-my-sm\">Account No.: {{ customer.accountNo }}</h6>\n          </div>\n          <div class=\"col-xs-12\">\n            <h6 class=\"q-my-sm\">Address: {{ customer.address }}</h6>\n          </div>\n          <div class=\"col-xs-12\">\n            <h6 class=\"q-my-sm\">Balance: {{ customer.balance }}</h6>\n          </div>\n          <div class=\"col-xs-12\">\n            <h6 class=\"q-my-sm\">Created At: {{ customer.createdAt }}</h6>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-xs-12 col-sm-6 q-px-sm text-left\">\n            <q-btn\n              @click=\"$emit('editAction')\"\n              label=\"Edit\"\n              color=\"warning\"\n              class=\"full-width\"\n            />\n          </div>\n          <div class=\"col-xs-12 col-sm-6 q-px-sm text-right\">\n            <q-btn\n              @click=\"$emit('deleteAction')\"\n              label=\"Delete\"\n              color=\"red\"\n              class=\"full-width\"\n            />\n          </div>\n        </div>\n      </q-card-section>\n    </q-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { PropType, defineComponent } from 'vue';\nimport CustomerModel from './CustomerModel';\nexport default defineComponent({\n  props: {\n    customer: {\n      type: Object as PropType<CustomerModel>,\n    },\n  },\n  emits: ['editAction', 'deleteAction'],\n  setup() {},\n});\n</script>\n\n<style></style>\n","\nimport { PropType, defineComponent } from 'vue';\nimport CustomerModel from './CustomerModel';\nexport default defineComponent({\n  props: {\n    customer: {\n      type: Object as PropType<CustomerModel>,\n    },\n  },\n  emits: ['editAction', 'deleteAction'],\n  setup() {},\n});\n","import { render } from \"./CustomerCard.vue?vue&type=template&id=2b578cf9\"\nimport script from \"./CustomerCard.vue?vue&type=script&lang=ts\"\nexport * from \"./CustomerCard.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCard,QCardSection,QBtn});\n","\nimport { ref, defineComponent, onMounted } from 'vue';\nimport CustomerCard from './CustomerCard.vue';\nimport NewCustomerModal from './NewCustomerModal.vue';\nimport CustomerService from './CustomerService';\nimport CustomerModel from './CustomerModel';\n\nexport default defineComponent({\n  components: {\n    CustomerCard,\n    NewCustomerModal,\n  },\n  setup() {\n    const customerModal = ref(false);\n    const customerRef = ref();\n    const customers = ref<CustomerModel[]>([]);\n    const isEditing = ref(false);\n\n    const getCustomers = async () => {\n      try {\n        customers.value = await CustomerService.getCustomers();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    // const vendors = [\n    //   {\n    //     id: '50-',\n    //     name: 'Hello',\n    //     phone: '03321021700',\n    //     bankName: 'HBL',\n    //     accountNo: '23997980857903',\n    //     balance: 500,\n    //     address: 'DHA',\n    //     createdAt: '12-01-2020',\n    //   },\n    //   {\n    //     id: '50-',\n    //     name: 'Hello',\n    //     phone: '03321021700',\n    //     bankName: 'HBL',\n    //     accountNo: '23997980857903',\n    //     balance: 500,\n    //     address: 'DHA',\n    //     createdAt: '12-01-2020',\n    //   },\n    // ];\n\n    const newCustomerAction = () => {\n      isEditing.value = false;\n      customerRef.value.resetForm();\n      customerModal.value = true;\n    };\n\n    const deleteCustomer = async (id: string) => {\n      console.log(`Delete Brand ${id}`);\n    };\n\n    const editCustomer = async (customer: CustomerModel) => {\n      isEditing.value = true;\n      customerRef.value.setToEdit(customer);\n      customerModal.value = true;\n    };\n\n    const refreshList = async () => {\n      console.log('reset-list');\n      getCustomers();\n      customerModal.value = !customerModal.value;\n    };\n\n    onMounted(async () => {\n      getCustomers();\n    });\n\n    return {\n      customers,\n      customerRef,\n      editCustomer,\n      isEditing,\n      customerModal,\n      deleteCustomer,\n      refreshList,\n      newCustomerAction,\n    };\n  },\n});\n","import { render } from \"./CustomerList.vue?vue&type=template&id=378a3e56\"\nimport script from \"./CustomerList.vue?vue&type=script&lang=ts\"\nexport * from \"./CustomerList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn});\n","import { closePortals, getPortalVm } from '../utils/private/portal.js'\nimport { isKeyCode } from '../utils/private/key-composition.js'\nimport getSSRProps from '../utils/private/noop-ssr-directive-transform.js'\n\n/*\n * depth\n *   < 0  --> close all chain\n *   0    --> disabled\n *   > 0  --> close chain up to N parent\n */\n\nfunction getDepth (value) {\n  if (value === false) {\n    return 0\n  }\n  if (value === true || value === void 0) {\n    return 1\n  }\n\n  const depth = parseInt(value, 10)\n  return isNaN(depth) ? 0 : depth\n}\n\nexport default __QUASAR_SSR_SERVER__\n  ? { name: 'close-popup', getSSRProps }\n  : {\n      name: 'close-popup',\n\n      beforeMount (el, { value }) {\n        const ctx = {\n          depth: getDepth(value),\n\n          handler (evt) {\n            // allow @click to be emitted\n            ctx.depth !== 0 && setTimeout(() => {\n              const vm = getPortalVm(el)\n              if (vm !== void 0) {\n                closePortals(vm, evt, ctx.depth)\n              }\n            })\n          },\n\n          handlerKey (evt) {\n            isKeyCode(evt, 13) === true && ctx.handler(evt)\n          }\n        }\n\n        el.__qclosepopup = ctx\n\n        el.addEventListener('click', ctx.handler)\n        el.addEventListener('keyup', ctx.handlerKey)\n      },\n\n      updated (el, { value, oldValue }) {\n        if (value !== oldValue) {\n          el.__qclosepopup.depth = getDepth(value)\n        }\n      },\n\n      beforeUnmount (el) {\n        const ctx = el.__qclosepopup\n        el.removeEventListener('click', ctx.handler)\n        el.removeEventListener('keyup', ctx.handlerKey)\n        delete el.__qclosepopup\n      }\n    }\n","import { ApiService } from \"@/services/ApiServices\";\nimport CustomerModel from './CustomerModel';\n\nexport default class CustomerService {\n    static baseUrl = \"customers\";\n    static async getCustomers() {\n        try {\n            const data = await ApiService.get(CustomerService.baseUrl);\n            return data.results.data;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    static async getCustomer(id: string) {\n        try {\n            const data = await ApiService.get(`${CustomerService.baseUrl}/${id}`);\n            return data.results.data;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    static async newCustomer(customer: CustomerModel) {\n        try {\n            const data = await ApiService.post(`${CustomerService.baseUrl}`, customer);\n            return data.data;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    static async updateCustomer(customer: CustomerModel) {\n        try {\n            const data = await ApiService.put(`${CustomerService.baseUrl}/${customer._id}`, customer);\n            return data.data;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n","<template>\n  <Modal\n    width=\"600px\"\n    :title=\"isEditing ? 'Update Customer Information' : 'Add Customer customer'\"\n  >\n    <q-form @submit=\"onSubmit\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"customer.name\"\n            label=\"Name\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"customer.phone\"\n            label=\"Mobile No.\"\n            type=\"number\"\n            lazy-rules\n            mask=\"###########\"\n            :rules=\"[(val) => val > 0 || 'Please enter a valid mobile number']\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"customer.address\"\n            label=\"Address\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"customer.bankName\"\n            label=\"Bank Details\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"customer.accountNo\"\n            label=\"Account No.\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            :disable=\"isEditing\"\n            v-model=\"customer.openingBalance\"\n            label=\"Balance.\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 q-my-sm\">\n          <q-btn\n            type=\"submit\"\n            label=\"Submit\"\n            color=\"primary\"\n            class=\"full-width\"\n          />\n        </div>\n      </div>\n    </q-form>\n  </Modal>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport CustomerModel from './CustomerModel';\nimport CustomerService from './CustomerService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n\n  setup(_, context) {\n    const customer = ref<CustomerModel>({\n      name: '',\n      phone: '',\n      address: '',\n      bankName: '',\n      accountNo: '',\n      openingBalance: 0,\n    });\n\n    const isEditing = ref(false);\n\n    const setToEdit = (customerData: CustomerModel) => {\n      isEditing.value = true;\n      customer.value._id = customerData._id;\n      customer.value.name = customerData.name;\n      customer.value.phone = customerData.phone;\n      customer.value.address = customerData.address;\n      customer.value.bankName = customerData.bankName;\n      customer.value.accountNo = customerData.accountNo;\n    };\n\n    const resetForm = () => {\n      customer.value._id = '';\n      customer.value.name = '';\n      customer.value.phone = '';\n      customer.value.address = '';\n      customer.value.bankName = '';\n      customer.value.accountNo = '';\n      customer.value.openingBalance = 0;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (customer.value._id) {\n          await CustomerService.updateCustomer(customer.value);\n        } else {\n          console.log('Add New customer');\n          await CustomerService.newCustomer(customer.value);\n        }\n        console.log(customer.value);\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      isEditing,\n      setToEdit,\n      customer,\n    };\n  },\n});\n</script>\n","\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport CustomerModel from './CustomerModel';\nimport CustomerService from './CustomerService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n\n  setup(_, context) {\n    const customer = ref<CustomerModel>({\n      name: '',\n      phone: '',\n      address: '',\n      bankName: '',\n      accountNo: '',\n      openingBalance: 0,\n    });\n\n    const isEditing = ref(false);\n\n    const setToEdit = (customerData: CustomerModel) => {\n      isEditing.value = true;\n      customer.value._id = customerData._id;\n      customer.value.name = customerData.name;\n      customer.value.phone = customerData.phone;\n      customer.value.address = customerData.address;\n      customer.value.bankName = customerData.bankName;\n      customer.value.accountNo = customerData.accountNo;\n    };\n\n    const resetForm = () => {\n      customer.value._id = '';\n      customer.value.name = '';\n      customer.value.phone = '';\n      customer.value.address = '';\n      customer.value.bankName = '';\n      customer.value.accountNo = '';\n      customer.value.openingBalance = 0;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (customer.value._id) {\n          await CustomerService.updateCustomer(customer.value);\n        } else {\n          console.log('Add New customer');\n          await CustomerService.newCustomer(customer.value);\n        }\n        console.log(customer.value);\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      isEditing,\n      setToEdit,\n      customer,\n    };\n  },\n});\n","import { render } from \"./NewCustomerModal.vue?vue&type=template&id=d04971ec\"\nimport script from \"./NewCustomerModal.vue?vue&type=script&lang=ts\"\nexport * from \"./NewCustomerModal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QBtn});\n","<template>\n  <q-dialog v-bind=\"$attrs\">\n    <q-card :style=\"`max-width: ${width}; width: 100%`\">\n      <q-card-section class=\"row items-center q-pb-none\">\n        <div class=\"text-h6\">{{ title }}</div>\n        <q-space />\n        <q-btn icon=\"close\" flat round dense v-close-popup />\n      </q-card-section>\n\n      <q-card-section>\n        <slot></slot>\n      </q-card-section>\n    </q-card>\n  </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => \"450px\",\n    },\n  },\n  setup() {},\n});\n</script>\n\n<style lang=\"scss\"></style>\n","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => \"450px\",\n    },\n  },\n  setup() {},\n});\n","import { h, defineComponent } from 'vue'\n\nconst space = h('div', { class: 'q-space' })\n\nexport default defineComponent({\n  name: 'QSpace',\n\n  setup () {\n    return () => space\n  }\n})\n","import { render } from \"./Modal.vue?vue&type=template&id=1cb2c8d7\"\nimport script from \"./Modal.vue?vue&type=script&lang=ts\"\nexport * from \"./Modal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';import ClosePopup from 'quasar/src/directives/ClosePopup.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn});qInstall(script, 'directives', {ClosePopup});\n"],"sourceRoot":""}