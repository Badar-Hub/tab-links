{"version":3,"sources":["webpack:///./src/domain/brands/NewBrandForm.vue","webpack:///./src/domain/brands/NewBrandForm.vue?c239","webpack:///./src/domain/brands/NewBrandForm.vue?fbed","webpack:///./node_modules/quasar/src/components/form/QForm.js","webpack:///./src/components/Layout/Modal.vue","webpack:///./src/components/Layout/Modal.vue?6662","webpack:///./src/components/Layout/Modal.vue?fe25","webpack:///./src/domain/brands/BrandList.vue","webpack:///./src/domain/brands/BrandList.vue?2d9c","webpack:///./src/domain/brands/BrandList.vue?f8ff","webpack:///./src/components/Layout/Modal.vue?8e4f","webpack:///./src/domain/brands/BrandsService.ts"],"names":["class","onSubmit","filled","brand","name","label","lazy-rules","rules","type","color","props","isEditing","Boolean","default","emits","setup","_","context","setToEdit","brandData","value","_id","resetForm","updateBrand","newBrand","emit","console","log","render","QForm","QInput","QBtn","defineComponent","autofocus","noErrorFocus","noResetFocus","greedy","Function","slots","vm","getCurrentInstance","rootRef","ref","validateIndex","registeredComponents","validate","shouldFocus","promises","focus","emitEvent","res","i","comp","valid","then","push","error","Promise","resolve","length","index","all","errors","filter","r","resetValidation","forEach","submit","evt","stopAndPrevent","val","target","reset","nextTick","addFocusFn","querySelector","Array","prototype","find","call","querySelectorAll","el","tabIndex","provide","formKey","bindComponent","vmProxy","unbindComponent","indexOf","splice","onMounted","Object","assign","proxy","getValidationComponents","h","onReset","hSlot","style","width","title","icon","flat","round","dense","$emit","modelValue","String","QCard","QCardSection","newBrandAction","isLoading","data","tableDef","actions","editBrand","row","brandModal","refreshList","components","NewBrandForm","Modal","Table","brandRef","PagedResultModel","TableModel","brands","getBrands","results","deleteBrand","id","BrandService","get","baseUrl","post","put"],"mappings":"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","file":"js/chunk-b756a8e8.dc0c035c.js","sourcesContent":["<template>\n    <q-form @submit=\"onSubmit\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"brand.name\"\n            label=\"Brand Name\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 q-my-sm\">\n          <q-btn\n            type=\"submit\"\n            label=\"Submit\"\n            color=\"primary\"\n            class=\"full-width\"\n          />\n        </div>\n      </div>\n    </q-form>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent } from 'vue';\nimport BrandModel from './BrandModel';\nimport BrandService from './BrandsService';\n\nexport default defineComponent({\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  emits: ['close-modal'],\n  setup(_, context) {\n    const brand = ref<BrandModel>({\n      name: '',\n    });\n\n    const setToEdit = (brandData: BrandModel) => {\n      brand.value._id = brandData._id;\n      brand.value.name = brandData.name;\n    };\n\n    const resetForm = () => {\n      brand.value._id = '';\n      brand.value.name = '';\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (brand.value._id) {\n          await BrandService.updateBrand(brand.value);\n        } else {\n          await BrandService.newBrand(brand.value);\n        }\n        context.emit('close-modal');\n        resetForm();\n      } catch (error) {\n        console.log(error, '|error');\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      brand,\n    };\n  },\n});\n</script>\n\n<style></style>\n","\nimport { ref, defineComponent } from 'vue';\nimport BrandModel from './BrandModel';\nimport BrandService from './BrandsService';\n\nexport default defineComponent({\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  emits: ['close-modal'],\n  setup(_, context) {\n    const brand = ref<BrandModel>({\n      name: '',\n    });\n\n    const setToEdit = (brandData: BrandModel) => {\n      brand.value._id = brandData._id;\n      brand.value.name = brandData.name;\n    };\n\n    const resetForm = () => {\n      brand.value._id = '';\n      brand.value.name = '';\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (brand.value._id) {\n          await BrandService.updateBrand(brand.value);\n        } else {\n          await BrandService.newBrand(brand.value);\n        }\n        context.emit('close-modal');\n        resetForm();\n      } catch (error) {\n        console.log(error, '|error');\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      brand,\n    };\n  },\n});\n","import { render } from \"./NewBrandForm.vue?vue&type=template&id=58f38cf8\"\nimport script from \"./NewBrandForm.vue?vue&type=script&lang=ts\"\nexport * from \"./NewBrandForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QBtn});\n","import { h, defineComponent, ref, onMounted, getCurrentInstance, nextTick, provide } from 'vue'\n\nimport { stopAndPrevent } from '../../utils/event.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { formKey } from '../../utils/private/symbols.js'\n\nexport default defineComponent({\n  name: 'QForm',\n\n  props: {\n    autofocus: Boolean,\n    noErrorFocus: Boolean,\n    noResetFocus: Boolean,\n    greedy: Boolean,\n\n    onSubmit: Function\n  },\n\n  emits: [ 'reset', 'validation-success', 'validation-error' ],\n\n  setup (props, { slots, emit }) {\n    const vm = getCurrentInstance()\n    const rootRef = ref(null)\n\n    let validateIndex = 0\n    const registeredComponents = []\n\n    function validate (shouldFocus) {\n      const promises = []\n      const focus = typeof shouldFocus === 'boolean'\n        ? shouldFocus\n        : props.noErrorFocus !== true\n\n      validateIndex++\n\n      const emitEvent = (res, ref) => {\n        emit('validation-' + (res === true ? 'success' : 'error'), ref)\n      }\n\n      for (let i = 0; i < registeredComponents.length; i++) {\n        const comp = registeredComponents[ i ]\n        const valid = comp.validate()\n\n        if (typeof valid.then === 'function') {\n          promises.push(\n            valid.then(\n              valid => ({ valid, comp }),\n              error => ({ valid: false, comp, error })\n            )\n          )\n        }\n        else if (valid !== true) {\n          if (props.greedy === false) {\n            emitEvent(false, comp)\n\n            if (focus === true && typeof comp.focus === 'function') {\n              comp.focus()\n            }\n\n            return Promise.resolve(false)\n          }\n\n          promises.push({ valid: false, comp })\n        }\n      }\n\n      if (promises.length === 0) {\n        emitEvent(true)\n        return Promise.resolve(true)\n      }\n\n      const index = validateIndex\n\n      return Promise.all(promises).then(\n        res => {\n          if (index === validateIndex) {\n            const errors = res.filter(r => r.valid !== true)\n\n            if (errors.length === 0) {\n              emitEvent(true)\n              return true\n            }\n\n            const { valid, comp } = errors[ 0 ]\n\n            emitEvent(false, comp)\n\n            if (\n              focus === true\n              && valid !== true\n              && typeof comp.focus === 'function'\n            ) {\n              comp.focus()\n            }\n\n            return false\n          }\n        }\n      )\n    }\n\n    function resetValidation () {\n      validateIndex++\n\n      registeredComponents.forEach(comp => {\n        typeof comp.resetValidation === 'function' && comp.resetValidation()\n      })\n    }\n\n    function submit (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      validate().then(val => {\n        if (val === true) {\n          if (props.onSubmit !== void 0) {\n            emit('submit', evt)\n          }\n          else if (evt !== void 0 && evt.target !== void 0 && typeof evt.target.submit === 'function') {\n            evt.target.submit()\n          }\n        }\n      })\n    }\n\n    function reset (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      emit('reset')\n\n      nextTick(() => { // allow userland to reset values before\n        resetValidation()\n        if (props.autofocus === true && props.noResetFocus !== true) {\n          focus()\n        }\n      })\n    }\n\n    function focus () {\n      addFocusFn(() => {\n        if (rootRef.value === null) { return }\n\n        const target = rootRef.value.querySelector('[autofocus], [data-autofocus]')\n          || Array.prototype.find.call(rootRef.value.querySelectorAll('[tabindex]'), el => el.tabIndex > -1)\n\n        target !== null && target !== void 0 && target.focus()\n      })\n    }\n\n    provide(formKey, {\n      bindComponent (vmProxy) {\n        registeredComponents.push(vmProxy)\n      },\n\n      unbindComponent (vmProxy) {\n        const index = registeredComponents.indexOf(vmProxy)\n        if (index > -1) {\n          registeredComponents.splice(index, 1)\n        }\n      }\n    })\n\n    onMounted(() => {\n      props.autofocus === true && focus()\n    })\n\n    // expose public methods\n    Object.assign(vm.proxy, {\n      validate,\n      resetValidation,\n      submit,\n      reset,\n      focus,\n      getValidationComponents: () => registeredComponents\n    })\n\n    return () => h('form', {\n      class: 'q-form',\n      ref: rootRef,\n      onSubmit: submit,\n      onReset: reset\n    }, hSlot(slots.default))\n  }\n})\n","<template>\n  <div class=\"custom-dialog\">\n    <q-card v-show=\"modelValue\" class=\"modal\">\n      <div\n        :style=\"`max-width: ${width}; width: 100%;`\"\n        class=\"row items-center q-pb-none modal-content\"\n      >\n        <q-card-section class=\"full-width\">\n          <div class=\"row full-width justify-between\">\n            <div class=\"text-h6 q-my-none\">{{ title }}</div>\n            <q-btn icon=\"close\" flat round dense @click=\"$emit('close')\" />\n          </div>\n        </q-card-section>\n      </div>\n\n      <div\n        :style=\"`max-width: ${width}; width: 100%;`\"\n        class=\"row items-center q-pb-none modal-content\"\n      >\n        <q-card-section class=\"full-width\">\n          <slot></slot>\n        </q-card-section>\n      </div>\n    </q-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => '650px',\n    },\n    modelValue: {\n      type: Boolean\n    }\n  },\n  emits: ['close'],\n});\n</script>\n\n<style lang=\"scss\">\n.custom-dialog {\n  .modal {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    position: fixed;\n    z-index: 3000;\n\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(0, 0, 0);\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n\n  .q-card__section--vert {\n    padding: 0;\n  }\n\n  /* Modal Content/Box */\n  .modal-content {\n    background-color: #fefefe;\n    margin: 0 auto; /* 15% from the top and centered */\n    padding: 20px;\n    max-height: 500px;\n    overflow: auto;\n    border: 1px solid #888;\n  }\n\n  /* The Close Button */\n  .close {\n    color: #aaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n  }\n\n  .close:hover,\n  .close:focus {\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => '650px',\n    },\n    modelValue: {\n      type: Boolean\n    }\n  },\n  emits: ['close'],\n});\n","import { render } from \"./Modal.vue?vue&type=template&id=6b50f288\"\nimport script from \"./Modal.vue?vue&type=script&lang=ts\"\nexport * from \"./Modal.vue?vue&type=script&lang=ts\"\n\nimport \"./Modal.vue?vue&type=style&index=0&id=6b50f288&lang=scss\"\nscript.render = render\n\nexport default script\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCard,QCardSection,QBtn});\n","<template>\n  <div>\n    <div class=\"q-pa-md\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-6 text-left\">\n          <h5 class=\"q-my-sm\">Brand List</h5>\n        </div>\n        <div class=\"col-xs-12 col-sm-6 text-right\">\n          <q-btn\n            @click=\"newBrandAction\"\n            label=\"Add New Brand\"\n            color=\"primary\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <Table\n          class=\"full-width\"\n          :isLoading=\"isLoading\"\n          :data=\"data\"\n          :tableDef=\"tableDef\"\n        >\n          <template #actions=\"{ props }\">\n            <div class=\"row\">\n              <q-btn\n                class=\"q-pa-none\"\n                flat\n                round\n                color=\"primary\"\n                icon=\"edit\"\n                @click=\"editBrand(props.row)\"\n              />\n            </div>\n          </template>\n        </Table>\n      </div>\n    </div>\n    <modal\n      v-model=\"brandModal\"\n      @close=\"brandModal = false\"\n      name=\"Add New Brand\"\n      :title=\"isEditing ? 'Update Brand' : 'Add New Brand'\"\n    >\n      <NewBrandForm\n        ref=\"brandRef\"\n        :isEditing=\"isEditing\"\n        @close=\"refreshList\"\n      />\n    </modal>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, onMounted } from 'vue';\nimport Modal from '../../components/Layout/Modal.vue';\nimport Column from '../../components/General/Table/ColumnModel';\nimport TableModel from '../../components/General/Table/TableModel';\nimport PagedResultModel from '../../interfaces/PagedResultModel';\nimport Table from '../../components/General/Table/Table.vue';\n// import BrandCard from './BrandCard.vue';\nimport BrandModel from './BrandModel';\nimport BrandService from './BrandsService';\nimport NewBrandForm from './NewBrandForm.vue';\n\nexport default defineComponent({\n  components: {\n    // BrandCard,\n    NewBrandForm,\n    Modal,\n    Table,\n  },\n  setup() {\n    const brandModal = ref(false);\n    const brandRef = ref();\n    const isEditing = ref(false);\n    const isLoading = ref(true)\n    const data = ref<PagedResultModel<BrandModel>>(\n      new PagedResultModel<BrandModel>()\n    );\n    const tableDef = ref<TableModel>(\n      new TableModel([\n        new Column('_id', 'ID'),\n        new Column('name', 'Name'),\n        new Column('actions', 'Actions', true),\n      ])\n    );\n\n    const brands = ref<BrandModel[]>([]);\n\n    const getBrands = async () => {\n      try {\n        isLoading.value = true;\n        brands.value = await BrandService.getBrands();\n        data.value.results = brands.value;\n        isLoading.value = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const newBrandAction = () => {\n      isEditing.value = false;\n      brandRef.value.resetForm();\n      brandModal.value = true;\n    };\n\n    const deleteBrand = async (id: string) => {\n      console.log(`Delete Brand ${id}`);\n    };\n\n    const editBrand = async (brand: BrandModel) => {\n      console.log(brand);\n\n      isEditing.value = true;\n      brandRef.value.setToEdit(brand);\n      brandModal.value = true;\n    };\n\n    const refreshList = async () => {\n      console.log('reset-list');\n      getBrands();\n      brandModal.value = !brandModal.value;\n    };\n\n    onMounted(async () => {\n      try {\n        getBrands();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      brands,\n      brandRef,\n      data,\n      tableDef,\n      isLoading,\n      editBrand,\n      isEditing,\n      brandModal,\n      deleteBrand,\n      refreshList,\n      newBrandAction,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\"></style>\n","\nimport { ref, defineComponent, onMounted } from 'vue';\nimport Modal from '../../components/Layout/Modal.vue';\nimport Column from '../../components/General/Table/ColumnModel';\nimport TableModel from '../../components/General/Table/TableModel';\nimport PagedResultModel from '../../interfaces/PagedResultModel';\nimport Table from '../../components/General/Table/Table.vue';\n// import BrandCard from './BrandCard.vue';\nimport BrandModel from './BrandModel';\nimport BrandService from './BrandsService';\nimport NewBrandForm from './NewBrandForm.vue';\n\nexport default defineComponent({\n  components: {\n    // BrandCard,\n    NewBrandForm,\n    Modal,\n    Table,\n  },\n  setup() {\n    const brandModal = ref(false);\n    const brandRef = ref();\n    const isEditing = ref(false);\n    const isLoading = ref(true)\n    const data = ref<PagedResultModel<BrandModel>>(\n      new PagedResultModel<BrandModel>()\n    );\n    const tableDef = ref<TableModel>(\n      new TableModel([\n        new Column('_id', 'ID'),\n        new Column('name', 'Name'),\n        new Column('actions', 'Actions', true),\n      ])\n    );\n\n    const brands = ref<BrandModel[]>([]);\n\n    const getBrands = async () => {\n      try {\n        isLoading.value = true;\n        brands.value = await BrandService.getBrands();\n        data.value.results = brands.value;\n        isLoading.value = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const newBrandAction = () => {\n      isEditing.value = false;\n      brandRef.value.resetForm();\n      brandModal.value = true;\n    };\n\n    const deleteBrand = async (id: string) => {\n      console.log(`Delete Brand ${id}`);\n    };\n\n    const editBrand = async (brand: BrandModel) => {\n      console.log(brand);\n\n      isEditing.value = true;\n      brandRef.value.setToEdit(brand);\n      brandModal.value = true;\n    };\n\n    const refreshList = async () => {\n      console.log('reset-list');\n      getBrands();\n      brandModal.value = !brandModal.value;\n    };\n\n    onMounted(async () => {\n      try {\n        getBrands();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      brands,\n      brandRef,\n      data,\n      tableDef,\n      isLoading,\n      editBrand,\n      isEditing,\n      brandModal,\n      deleteBrand,\n      refreshList,\n      newBrandAction,\n    };\n  },\n});\n","import { render } from \"./BrandList.vue?vue&type=template&id=be417156\"\nimport script from \"./BrandList.vue?vue&type=script&lang=ts\"\nexport * from \"./BrandList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--0-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./Modal.vue?vue&type=style&index=0&id=6b50f288&lang=scss\"","import { ApiService } from \"@/services/ApiServices\";\nimport BrandModel from \"./BrandModel\";\n\nexport default class BrandService {\n  static baseUrl = \"brands\";\n  static async getBrands() {\n    try {\n      const data = await ApiService.get(BrandService.baseUrl);\n      return data.results.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async newBrand(brand: BrandModel) {\n    try {\n      const data = await ApiService.post(`${BrandService.baseUrl}`, brand);\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async updateBrand(brand: BrandModel) {\n    try {\n      const data = await ApiService.put(\n        `${BrandService.baseUrl}/${brand._id}`,\n        brand\n      );\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"],"sourceRoot":""}