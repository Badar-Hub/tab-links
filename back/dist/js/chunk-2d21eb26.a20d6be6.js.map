{"version":3,"sources":["webpack:///./src/domain/accounts/customer/customerRecord.vue","webpack:///./src/domain/accounts/customer/customerRecord.vue?ecad","webpack:///./src/domain/accounts/customer/customerRecord.vue?d10b"],"names":["class","viewInvoiceModal","data","tableDef","isLoading","actions","props","viewInvoiceAction","row","icon","unelevated","ref","components","NewInvoice","Table","setup","invoices","route","viewInvoiceRef","PagedResultModel","TableModel","invoice","value","setToEdit","error","console","log","clicked","getInvoices","AccountsService","getInvoice","params","id","results","render","QBtn","QCard","QCardSection"],"mappings":"0IAGoCA,MAAM,8B,uIAFxC,eAgDM,Y,eA/CJ,eAA8H,MAAhGA,MAAM,UAAW,QAAK,+BAAE,EAAAC,kBAAoB,EAAAA,oBAAmB,+BAA4B,M,QAA7G,EAAAA,oB,eACZ,eA0CM,MA1CN,EA0CM,CAzCJ,eAQQ,GARDD,MAAM,aAAcE,KAAM,EAAAA,KAAOC,SAAU,EAAAA,SAAWC,UAAW,EAAAA,W,CAC3DC,QAAO,gBAChB,gBADoBC,EACpB,EADoBA,MACpB,MADyB,CACzB,eAIE,GAHC,QAAK,mBAAE,EAAAC,kBAAkBD,EAAME,MAChCC,KAAK,UACLC,WAAA,I,gFANM,EAAAT,oB,eA2Cd,eAEM,YADJ,eAAmC,GAAvBU,IAAI,kBAAgB,W,cADrB,EAAAV,sB,gHCnCF,iBAAgB,CAC7BW,WAAY,CAAEC,WAAA,aAAYC,QAAA,MAC1BC,MAF6B,WAG3B,IAAMC,EAAW,eAAuB,IAClCC,EAAQ,iBACRC,EAAiB,iBACjBjB,EAAmB,gBAAI,GACvBG,EAAY,gBAAI,GAChBF,EAAO,eACX,IAAIiB,EAAA,MAGAhB,EAAW,eACf,IAAIiB,EAAA,KAAW,CACb,IAAI,OAAO,eAAgB,QAAQ,GACnC,IAAI,OAAO,YAAa,eAAe,GACvC,IAAI,OAAO,YAAa,aAAa,GACrC,IAAI,OAAO,aAAc,UAAU,GACnC,IAAI,OAAO,UAAW,WAAW,GAAO,MAItCb,EAAiB,yDAAG,WAAOc,GAAP,iFACxB,IACEH,EAAeI,MAAMC,UAAUF,GAC/BpB,EAAiBqB,OAAQ,EACzB,MAAOE,GACPC,QAAQC,IAAIF,GALU,2CAAH,sDASjBG,EAAU,SAACrB,GACfmB,QAAQC,IAAIpB,IAGRsB,EAAW,yDAAG,8GAEhBxB,EAAUkB,OAAQ,EAFF,SAGOO,EAAA,KAAgBC,WACrCb,EAAMc,OAAOC,IAJC,OAGhBhB,EAASM,MAHO,OAMhBpB,EAAKoB,MAAMW,QAAUjB,EAASM,MAC9BlB,EAAUkB,OAAQ,EAPF,mDAShBG,QAAQC,IAAR,MATgB,yDAAH,qDAsBjB,OATA,eAAS,wCAAC,8FACR,IACEE,IACAH,QAAQC,IAAIV,GACZ,MAAOQ,GACPC,QAAQC,IAAIF,GALN,4CASH,CACLtB,OACAyB,UACAxB,WACAa,WACAZ,YACAG,oBACAN,mBACAiB,qB,yDCzEN,EAAOgB,OAASA,EAED,eAKf,IAAS,EAAQ,aAAc,CAACC,OAAA,KAAKC,QAAA,KAAMC,eAAA","file":"js/chunk-2d21eb26.a20d6be6.js","sourcesContent":["<template>\n  <div>\n    <h6 v-show=\"viewInvoiceModal\" class=\"q-my-sm\" @click=\"viewInvoiceModal = !viewInvoiceModal\" >Go back to Customer Invoices</h6>\n    <div v-show=\"!viewInvoiceModal\" class=\"row justify-center q-pa-md\">\n      <Table class=\"full-width\" :data=\"data\" :tableDef=\"tableDef\" :isLoading=\"isLoading\">\n        <template #actions=\"{ props }\">\n          <q-btn\n            @click=\"viewInvoiceAction(props.row)\"\n            icon=\"receipt\"\n            unelevated\n          />\n        </template>\n      </Table>\n      <!-- <q-card class=\"q-ma-sm\" v-for=\"(invoice, index) in invoices\" :key=\"index\">\n        <q-card-section>\n          <div class=\"row\">\n            <div class=\"col-xs-12\">\n              <h6 class=\"q-my-sm\">Invoice Number: {{ invoice.invoiceNo }}</h6>\n            </div>\n            <div class=\"col-xs-12\">\n              <h6 class=\"q-my-sm\">Amount: {{ invoice.totalValue }}</h6>\n            </div>\n          </div>\n        </q-card-section>\n        <q-card-section>\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6 q-pa-sm\">\n              <q-btn\n                @click=\"viewInvoiceAction(invoice)\"\n                label=\"View Invoice\"\n                color=\"primary\"\n                class=\"full-width\"\n              />\n            </div>\n            <div class=\"col-xs-12 col-sm-6 q-pa-sm\">\n              <q-btn\n                @click=\"$emit('deleteAction')\"\n                label=\"Delete\"\n                color=\"red\"\n                class=\"full-width\"\n              />\n            </div>\n          </div>\n        </q-card-section>\n      </q-card> -->\n    </div>\n    <div v-show=\"viewInvoiceModal\">\n      <NewInvoice ref=\"viewInvoiceRef\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport NewInvoiceModel from '../NewInvoiceModel';\nimport AccountsService from '../AccountsService';\nimport NewInvoice from '../invoices/newInvoice.vue';\nimport Column from '../../../components/General/Table/ColumnModel';\nimport Table from '../../../components/General/Table/Table.vue';\nimport TableModel from '../../../components/General/Table/TableModel';\nimport PagedResultModel from '../../../interfaces/PagedResultModel';\n\nexport default defineComponent({\n  components: { NewInvoice, Table },\n  setup() {\n    const invoices = ref<NewInvoiceModel[]>([]);\n    const route = useRoute();\n    const viewInvoiceRef = ref();\n    const viewInvoiceModal = ref(false);\n    const isLoading = ref(true);\n    const data = ref<PagedResultModel<NewInvoiceModel>>(\n      new PagedResultModel<NewInvoiceModel>()\n    );\n\n    const tableDef = ref<TableModel>(\n      new TableModel([\n        new Column('customerName', 'Name', true),\n        new Column('invoiceNo', 'Invoice No.', true),\n        new Column('reference', 'Reference', true),\n        new Column('totalValue', 'Amount', true),\n        new Column('actions', 'Actions', false, true),\n      ])\n    );\n\n    const viewInvoiceAction = async (invoice: NewInvoiceModel) => {\n      try {\n        viewInvoiceRef.value.setToEdit(invoice);\n        viewInvoiceModal.value = true;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const clicked = (props: any) => {\n      console.log(props);\n    };\n\n    const getInvoices = async () => {\n      try {\n        isLoading.value = true;\n        invoices.value = await AccountsService.getInvoice(\n          route.params.id as string\n        );\n        data.value.results = invoices.value;\n        isLoading.value = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    onMounted(async () => {\n      try {\n        getInvoices();\n        console.log(invoices);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      data,\n      clicked,\n      tableDef,\n      invoices,\n      isLoading,\n      viewInvoiceAction,\n      viewInvoiceModal,\n      viewInvoiceRef,\n    };\n  },\n});\n</script>\n","\nimport { defineComponent, onMounted, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport NewInvoiceModel from '../NewInvoiceModel';\nimport AccountsService from '../AccountsService';\nimport NewInvoice from '../invoices/newInvoice.vue';\nimport Column from '../../../components/General/Table/ColumnModel';\nimport Table from '../../../components/General/Table/Table.vue';\nimport TableModel from '../../../components/General/Table/TableModel';\nimport PagedResultModel from '../../../interfaces/PagedResultModel';\n\nexport default defineComponent({\n  components: { NewInvoice, Table },\n  setup() {\n    const invoices = ref<NewInvoiceModel[]>([]);\n    const route = useRoute();\n    const viewInvoiceRef = ref();\n    const viewInvoiceModal = ref(false);\n    const isLoading = ref(true);\n    const data = ref<PagedResultModel<NewInvoiceModel>>(\n      new PagedResultModel<NewInvoiceModel>()\n    );\n\n    const tableDef = ref<TableModel>(\n      new TableModel([\n        new Column('customerName', 'Name', true),\n        new Column('invoiceNo', 'Invoice No.', true),\n        new Column('reference', 'Reference', true),\n        new Column('totalValue', 'Amount', true),\n        new Column('actions', 'Actions', false, true),\n      ])\n    );\n\n    const viewInvoiceAction = async (invoice: NewInvoiceModel) => {\n      try {\n        viewInvoiceRef.value.setToEdit(invoice);\n        viewInvoiceModal.value = true;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const clicked = (props: any) => {\n      console.log(props);\n    };\n\n    const getInvoices = async () => {\n      try {\n        isLoading.value = true;\n        invoices.value = await AccountsService.getInvoice(\n          route.params.id as string\n        );\n        data.value.results = invoices.value;\n        isLoading.value = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    onMounted(async () => {\n      try {\n        getInvoices();\n        console.log(invoices);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      data,\n      clicked,\n      tableDef,\n      invoices,\n      isLoading,\n      viewInvoiceAction,\n      viewInvoiceModal,\n      viewInvoiceRef,\n    };\n  },\n});\n","import { render } from \"./customerRecord.vue?vue&type=template&id=32ae2853\"\nimport script from \"./customerRecord.vue?vue&type=script&lang=ts\"\nexport * from \"./customerRecord.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport qInstall from \"../../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn,QCard,QCardSection});\n"],"sourceRoot":""}