{"version":3,"sources":["webpack:///./node_modules/quasar/src/components/form/QForm.js","webpack:///./node_modules/quasar/src/directives/ClosePopup.js","webpack:///./src/domain/categories/NewCategoryModal.vue","webpack:///./src/domain/categories/NewCategoryModal.vue?0bff","webpack:///./src/domain/categories/NewCategoryModal.vue?abcc","webpack:///./src/domain/categories/CategoryList.vue","webpack:///./src/domain/categories/CategoryCard.vue","webpack:///./src/domain/categories/CategoryCard.vue?fadf","webpack:///./src/domain/categories/CategoryCard.vue?0e90","webpack:///./src/domain/categories/CategoryList.vue?1182","webpack:///./src/domain/categories/CategoryList.vue?abf1","webpack:///./src/domain/categories/CategoryService.ts","webpack:///./src/components/General/Modal.vue","webpack:///./src/components/General/Modal.vue?40b4","webpack:///./node_modules/quasar/src/components/space/QSpace.js","webpack:///./src/components/General/Modal.vue?16dd"],"names":["defineComponent","name","props","autofocus","Boolean","noErrorFocus","noResetFocus","greedy","onSubmit","Function","emits","setup","slots","emit","vm","getCurrentInstance","rootRef","ref","validateIndex","registeredComponents","validate","shouldFocus","promises","focus","emitEvent","res","i","comp","valid","then","push","error","Promise","resolve","length","index","all","errors","filter","r","resetValidation","forEach","submit","evt","stopAndPrevent","val","target","reset","nextTick","addFocusFn","value","querySelector","Array","prototype","find","call","querySelectorAll","el","tabIndex","provide","formKey","bindComponent","vmProxy","unbindComponent","indexOf","splice","onMounted","Object","assign","proxy","getValidationComponents","h","class","onReset","hSlot","default","getDepth","depth","parseInt","isNaN","__QUASAR_SSR_SERVER__","beforeMount","ctx","handler","setTimeout","getPortalVm","closePortals","handlerKey","isKeyCode","__qclosepopup","addEventListener","updated","oldValue","beforeUnmount","removeEventListener","title","isEditing","filled","category","label","lazy-rules","rules","type","color","components","Modal","_","context","resetForm","_id","setToEdit","categoryData","CategoryService","updateCategory","newCategory","console","log","render","QForm","QInput","QBtn","newCategoryAction","categories","key","editCategory","deleteCategory","categoryModal","refreshList","createdAt","$emit","QCard","QCardSection","CategoryCard","NewCategoryModal","categoryRef","getCategories","id","get","baseUrl","data","results","post","put","$attrs","style","width","icon","flat","round","dense","String","space","QDialog","QSpace","ClosePopup"],"mappings":"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","file":"js/chunk-04c825b4.baafc9ea.js","sourcesContent":["import { h, defineComponent, ref, onMounted, getCurrentInstance, nextTick, provide } from 'vue'\n\nimport { stopAndPrevent } from '../../utils/event.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { formKey } from '../../utils/private/symbols.js'\n\nexport default defineComponent({\n  name: 'QForm',\n\n  props: {\n    autofocus: Boolean,\n    noErrorFocus: Boolean,\n    noResetFocus: Boolean,\n    greedy: Boolean,\n\n    onSubmit: Function\n  },\n\n  emits: [ 'reset', 'validation-success', 'validation-error' ],\n\n  setup (props, { slots, emit }) {\n    const vm = getCurrentInstance()\n    const rootRef = ref(null)\n\n    let validateIndex = 0\n    const registeredComponents = []\n\n    function validate (shouldFocus) {\n      const promises = []\n      const focus = typeof shouldFocus === 'boolean'\n        ? shouldFocus\n        : props.noErrorFocus !== true\n\n      validateIndex++\n\n      const emitEvent = (res, ref) => {\n        emit('validation-' + (res === true ? 'success' : 'error'), ref)\n      }\n\n      for (let i = 0; i < registeredComponents.length; i++) {\n        const comp = registeredComponents[ i ]\n        const valid = comp.validate()\n\n        if (typeof valid.then === 'function') {\n          promises.push(\n            valid.then(\n              valid => ({ valid, comp }),\n              error => ({ valid: false, comp, error })\n            )\n          )\n        }\n        else if (valid !== true) {\n          if (props.greedy === false) {\n            emitEvent(false, comp)\n\n            if (focus === true && typeof comp.focus === 'function') {\n              comp.focus()\n            }\n\n            return Promise.resolve(false)\n          }\n\n          promises.push({ valid: false, comp })\n        }\n      }\n\n      if (promises.length === 0) {\n        emitEvent(true)\n        return Promise.resolve(true)\n      }\n\n      const index = validateIndex\n\n      return Promise.all(promises).then(\n        res => {\n          if (index === validateIndex) {\n            const errors = res.filter(r => r.valid !== true)\n\n            if (errors.length === 0) {\n              emitEvent(true)\n              return true\n            }\n\n            const { valid, comp } = errors[ 0 ]\n\n            emitEvent(false, comp)\n\n            if (\n              focus === true\n              && valid !== true\n              && typeof comp.focus === 'function'\n            ) {\n              comp.focus()\n            }\n\n            return false\n          }\n        }\n      )\n    }\n\n    function resetValidation () {\n      validateIndex++\n\n      registeredComponents.forEach(comp => {\n        typeof comp.resetValidation === 'function' && comp.resetValidation()\n      })\n    }\n\n    function submit (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      validate().then(val => {\n        if (val === true) {\n          if (props.onSubmit !== void 0) {\n            emit('submit', evt)\n          }\n          else if (evt !== void 0 && evt.target !== void 0 && typeof evt.target.submit === 'function') {\n            evt.target.submit()\n          }\n        }\n      })\n    }\n\n    function reset (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      emit('reset')\n\n      nextTick(() => { // allow userland to reset values before\n        resetValidation()\n        if (props.autofocus === true && props.noResetFocus !== true) {\n          focus()\n        }\n      })\n    }\n\n    function focus () {\n      addFocusFn(() => {\n        if (rootRef.value === null) { return }\n\n        const target = rootRef.value.querySelector('[autofocus], [data-autofocus]')\n          || Array.prototype.find.call(rootRef.value.querySelectorAll('[tabindex]'), el => el.tabIndex > -1)\n\n        target !== null && target !== void 0 && target.focus()\n      })\n    }\n\n    provide(formKey, {\n      bindComponent (vmProxy) {\n        registeredComponents.push(vmProxy)\n      },\n\n      unbindComponent (vmProxy) {\n        const index = registeredComponents.indexOf(vmProxy)\n        if (index > -1) {\n          registeredComponents.splice(index, 1)\n        }\n      }\n    })\n\n    onMounted(() => {\n      props.autofocus === true && focus()\n    })\n\n    // expose public methods\n    Object.assign(vm.proxy, {\n      validate,\n      resetValidation,\n      submit,\n      reset,\n      focus,\n      getValidationComponents: () => registeredComponents\n    })\n\n    return () => h('form', {\n      class: 'q-form',\n      ref: rootRef,\n      onSubmit: submit,\n      onReset: reset\n    }, hSlot(slots.default))\n  }\n})\n","import { closePortals, getPortalVm } from '../utils/private/portal.js'\nimport { isKeyCode } from '../utils/private/key-composition.js'\nimport getSSRProps from '../utils/private/noop-ssr-directive-transform.js'\n\n/*\n * depth\n *   < 0  --> close all chain\n *   0    --> disabled\n *   > 0  --> close chain up to N parent\n */\n\nfunction getDepth (value) {\n  if (value === false) {\n    return 0\n  }\n  if (value === true || value === void 0) {\n    return 1\n  }\n\n  const depth = parseInt(value, 10)\n  return isNaN(depth) ? 0 : depth\n}\n\nexport default __QUASAR_SSR_SERVER__\n  ? { name: 'close-popup', getSSRProps }\n  : {\n      name: 'close-popup',\n\n      beforeMount (el, { value }) {\n        const ctx = {\n          depth: getDepth(value),\n\n          handler (evt) {\n            // allow @click to be emitted\n            ctx.depth !== 0 && setTimeout(() => {\n              const vm = getPortalVm(el)\n              if (vm !== void 0) {\n                closePortals(vm, evt, ctx.depth)\n              }\n            })\n          },\n\n          handlerKey (evt) {\n            isKeyCode(evt, 13) === true && ctx.handler(evt)\n          }\n        }\n\n        el.__qclosepopup = ctx\n\n        el.addEventListener('click', ctx.handler)\n        el.addEventListener('keyup', ctx.handlerKey)\n      },\n\n      updated (el, { value, oldValue }) {\n        if (value !== oldValue) {\n          el.__qclosepopup.depth = getDepth(value)\n        }\n      },\n\n      beforeUnmount (el) {\n        const ctx = el.__qclosepopup\n        el.removeEventListener('click', ctx.handler)\n        el.removeEventListener('keyup', ctx.handlerKey)\n        delete el.__qclosepopup\n      }\n    }\n","<template>\n  <Modal :title=\"isEditing ? 'Update Category' : 'Add New Category'\">\n    <q-form @submit=\"onSubmit\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"category.name\"\n            label=\"Category Name\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 q-my-sm\">\n          <q-btn\n            type=\"submit\"\n            label=\"Submit\"\n            color=\"primary\"\n            class=\"full-width\"\n          />\n        </div>\n      </div>\n    </q-form>\n  </Modal>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport CategoryModel from './CategoryModel';\nimport CategoryService from './CategoryService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  setup(_, context) {\n    const category = ref<CategoryModel>({\n      name: '',\n    });\n\n    const resetForm = () => {\n      category.value._id = '';\n      category.value.name = '';\n    };\n\n    const setToEdit = async (categoryData: CategoryModel) => {\n      category.value._id = categoryData._id;\n      category.value.name = categoryData.name;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (category.value._id) {\n          await CategoryService.updateCategory(category.value);\n        } else {\n          await CategoryService.newCategory(category.value);\n        }\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      category,\n    };\n  },\n});\n</script>\n\n<style></style>\n","\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport CategoryModel from './CategoryModel';\nimport CategoryService from './CategoryService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  setup(_, context) {\n    const category = ref<CategoryModel>({\n      name: '',\n    });\n\n    const resetForm = () => {\n      category.value._id = '';\n      category.value.name = '';\n    };\n\n    const setToEdit = async (categoryData: CategoryModel) => {\n      category.value._id = categoryData._id;\n      category.value.name = categoryData.name;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (category.value._id) {\n          await CategoryService.updateCategory(category.value);\n        } else {\n          await CategoryService.newCategory(category.value);\n        }\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      category,\n    };\n  },\n});\n","import { render } from \"./NewCategoryModal.vue?vue&type=template&id=442a62bd\"\nimport script from \"./NewCategoryModal.vue?vue&type=script&lang=ts\"\nexport * from \"./NewCategoryModal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QBtn});\n","<template>\n  <div class=\"q-pa-md\">\n    <div class=\"row\">\n      <div class=\"col-xs-12 col-sm-6 text-left\">\n        <h5 class=\"q-my-sm\">Category List</h5>\n      </div>\n      <div class=\"col-xs-12 col-sm-6 text-right\">\n        <q-btn\n          @click=\"newCategoryAction\"\n          label=\"Add New Category\"\n          color=\"primary\"\n        />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div\n        v-for=\"(category, i) in categories\"\n        :key=\"i\"\n        class=\"col-xs-12 col-sm-4 q-pa-sm\"\n      >\n        <CategoryCard\n          @editAction=\"editCategory(category)\"\n          @deleteAction=\"deleteCategory(category._id)\"\n          :category=\"category\"\n        />\n      </div>\n    </div>\n  </div>\n  <NewCategoryModal\n    ref=\"categoryRef\"\n    :isEditing=\"isEditing\"\n    v-model=\"categoryModal\"\n    @close=\"refreshList\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, onMounted } from 'vue';\nimport CategoryCard from './CategoryCard.vue';\nimport CategoryModel from './CategoryModel';\nimport NewCategoryModal from './NewCategoryModal.vue';\nimport CategoryService from './CategoryService';\n\nexport default defineComponent({\n  components: {\n    CategoryCard,\n    NewCategoryModal,\n  },\n  setup() {\n    const categoryModal = ref(false);\n    const categoryRef = ref();\n    const isEditing = ref(false);\n    const categories = ref<CategoryModel[]>([]);\n\n    const getCategories = async () => {\n      try {\n        categories.value = await CategoryService.getCategories();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const newCategoryAction = () => {\n      isEditing.value = false;\n      categoryRef.value.resetForm();\n      categoryModal.value = !categoryModal.value;\n    };\n\n    const editCategory = async (category: CategoryModel) => {\n      isEditing.value = true;\n      categoryModal.value = true;\n      console.log('lol update category start');\n      categoryRef.value.setToEdit(category);\n      console.log('lol update category end');\n    };\n\n    const deleteCategory = (id: string) => {\n      console.log('lol delete category start', id);\n      console.log('lol delete category end', id);\n    };\n\n    const refreshList = async () => {\n      console.log('reset-list');\n      getCategories();\n      categoryModal.value = !categoryModal.value;\n    };\n\n    onMounted(async () => {\n      try {\n        getCategories();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      isEditing,\n      editCategory,\n      deleteCategory,\n      categories,\n      categoryModal,\n      refreshList,\n      categoryRef,\n      newCategoryAction,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\"></style>\n","<template>\n  <div class=\"row\">\n    <q-card>\n      <q-card-section>\n        <div class=\"row\">\n          <div class=\"col-xs-12\">\n            <h6 class=\"q-my-sm\">Category Name: {{ category.name }}</h6>\n          </div>\n          <div class=\"col-xs-12\">\n            <h6 class=\"q-my-sm\">Created At: {{ category.createdAt }}</h6>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-xs-12 col-sm-6 q-px-sm text-left\">\n            <q-btn\n              @click=\"$emit('editAction')\"\n              label=\"Edit\"\n              color=\"warning\"\n              class=\"full-width\"\n            />\n          </div>\n          <div class=\"col-xs-12 col-sm-6 q-px-sm text-right\">\n            <q-btn\n              @click=\"$emit('deleteAction')\"\n              label=\"Delete\"\n              color=\"red\"\n              class=\"full-width\"\n            />\n          </div>\n        </div>\n      </q-card-section>\n    </q-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\nimport CategoryModel from \"./CategoryModel\";\n\nexport default defineComponent({\n  props: {\n    category: {\n      type: Object as PropType<CategoryModel>,\n    },\n  },\n  emits: [\"editAction\", \"deleteAction\"],\n  setup() {},\n});\n</script>\n\n<style></style>\n","\nimport { defineComponent, PropType } from \"vue\";\nimport CategoryModel from \"./CategoryModel\";\n\nexport default defineComponent({\n  props: {\n    category: {\n      type: Object as PropType<CategoryModel>,\n    },\n  },\n  emits: [\"editAction\", \"deleteAction\"],\n  setup() {},\n});\n","import { render } from \"./CategoryCard.vue?vue&type=template&id=00d34de1\"\nimport script from \"./CategoryCard.vue?vue&type=script&lang=ts\"\nexport * from \"./CategoryCard.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCard,QCardSection,QBtn});\n","\nimport { ref, defineComponent, onMounted } from 'vue';\nimport CategoryCard from './CategoryCard.vue';\nimport CategoryModel from './CategoryModel';\nimport NewCategoryModal from './NewCategoryModal.vue';\nimport CategoryService from './CategoryService';\n\nexport default defineComponent({\n  components: {\n    CategoryCard,\n    NewCategoryModal,\n  },\n  setup() {\n    const categoryModal = ref(false);\n    const categoryRef = ref();\n    const isEditing = ref(false);\n    const categories = ref<CategoryModel[]>([]);\n\n    const getCategories = async () => {\n      try {\n        categories.value = await CategoryService.getCategories();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const newCategoryAction = () => {\n      isEditing.value = false;\n      categoryRef.value.resetForm();\n      categoryModal.value = !categoryModal.value;\n    };\n\n    const editCategory = async (category: CategoryModel) => {\n      isEditing.value = true;\n      categoryModal.value = true;\n      console.log('lol update category start');\n      categoryRef.value.setToEdit(category);\n      console.log('lol update category end');\n    };\n\n    const deleteCategory = (id: string) => {\n      console.log('lol delete category start', id);\n      console.log('lol delete category end', id);\n    };\n\n    const refreshList = async () => {\n      console.log('reset-list');\n      getCategories();\n      categoryModal.value = !categoryModal.value;\n    };\n\n    onMounted(async () => {\n      try {\n        getCategories();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      isEditing,\n      editCategory,\n      deleteCategory,\n      categories,\n      categoryModal,\n      refreshList,\n      categoryRef,\n      newCategoryAction,\n    };\n  },\n});\n","import { render } from \"./CategoryList.vue?vue&type=template&id=5d183915\"\nimport script from \"./CategoryList.vue?vue&type=script&lang=ts\"\nexport * from \"./CategoryList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn});\n","import { ApiService } from \"@/services/ApiServices\";\nimport CategoryModel from \"./CategoryModel\";\n\nexport default class CategoryService {\n  static baseUrl = \"categories\";\n  static async getCategories() {\n    try {\n      const data = await ApiService.get(CategoryService.baseUrl);\n      return data.results.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async newCategory(category: CategoryModel) {\n    try {\n      const data = await ApiService.post(`${CategoryService.baseUrl}`, category);\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async updateCategory(category: CategoryModel) {\n    try {\n      const data = await ApiService.put(\n        `${CategoryService.baseUrl}/${category._id}`,\n        category\n      );\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<template>\n  <q-dialog v-bind=\"$attrs\">\n    <q-card :style=\"`max-width: ${width}; width: 100%`\">\n      <q-card-section class=\"row items-center q-pb-none\">\n        <div class=\"text-h6\">{{ title }}</div>\n        <q-space />\n        <q-btn icon=\"close\" flat round dense v-close-popup />\n      </q-card-section>\n\n      <q-card-section>\n        <slot></slot>\n      </q-card-section>\n    </q-card>\n  </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => \"450px\",\n    },\n  },\n  setup() {},\n});\n</script>\n\n<style lang=\"scss\"></style>\n","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => \"450px\",\n    },\n  },\n  setup() {},\n});\n","import { h, defineComponent } from 'vue'\n\nconst space = h('div', { class: 'q-space' })\n\nexport default defineComponent({\n  name: 'QSpace',\n\n  setup () {\n    return () => space\n  }\n})\n","import { render } from \"./Modal.vue?vue&type=template&id=1cb2c8d7\"\nimport script from \"./Modal.vue?vue&type=script&lang=ts\"\nexport * from \"./Modal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';import ClosePopup from 'quasar/src/directives/ClosePopup.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn});qInstall(script, 'directives', {ClosePopup});\n"],"sourceRoot":""}