{"version":3,"sources":["webpack:///./src/domain/vendors/VendorService.ts","webpack:///./src/domain/vendors/NewVendorModal.vue","webpack:///./src/domain/vendors/NewVendorModal.vue?e1c5","webpack:///./src/domain/vendors/NewVendorModal.vue?0b90","webpack:///./src/domain/categories/NewCategoryModal.vue","webpack:///./src/domain/categories/NewCategoryModal.vue?8c61","webpack:///./src/domain/categories/NewCategoryModal.vue?1af6","webpack:///./src/domain/products/NewProductModal.vue","webpack:///./src/domain/products/NewProductModal.vue?684d","webpack:///./src/domain/products/NewProductModal.vue?e231","webpack:///./src/views/Create.vue","webpack:///./src/views/Create.vue?a38b","webpack:///./src/views/Create.vue?1915","webpack:///./src/domain/brands/BrandsService.ts","webpack:///./src/domain/customers/NewCustomerModal.vue","webpack:///./src/domain/customers/NewCustomerModal.vue?93f1","webpack:///./src/domain/customers/NewCustomerModal.vue?6295","webpack:///./src/domain/categories/CategoryService.ts","webpack:///./src/domain/brands/NewBrandModal.vue","webpack:///./src/domain/brands/NewBrandModal.vue?efd6","webpack:///./src/domain/brands/NewBrandModal.vue?c451","webpack:///./src/components/General/Modal.vue","webpack:///./src/components/General/Modal.vue?b930","webpack:///./node_modules/quasar/src/components/space/QSpace.js","webpack:///./src/components/General/Modal.vue?620c"],"names":["VendorService","get","baseUrl","data","results","console","log","vendor","post","put","_id","class","width","title","isEditing","onSubmit","filled","name","label","lazy-rules","rules","phone","type","mask","val","address","bankName","accountNo","disable","openingBalance","color","components","Modal","setup","_","context","setToEdit","vendorData","value","resetForm","updateVendor","newVendor","emit","render","QForm","QInput","QBtn","category","props","Boolean","default","categoryData","CategoryService","updateCategory","newCategory","product","sku","brand","options","brands","categories","price","discount","costPrice","quantity","productData","ProductService","updateProduct","newProducts","BrandsService","getBrands","allBrands","map","getCategories","allCategories","QSelect","addNewProductModal","addNewCategoryModal","addNewBrandModal","addNewCustomerModal","addNewVendorModal","addNewInvoiceModal","AddNewCustomer","AddNewCategory","AddNewProduct","AddNewInvoice","AddNewVendor","AddNewBrand","Dialog","BrandService","customer","customerData","CustomerService","updateCustomer","newCustomer","brandData","updateBrand","newBrand","$attrs","style","icon","flat","round","dense","String","space","h","defineComponent","QDialog","QCard","QCardSection","QSpace","ClosePopup"],"mappings":"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","file":"js/chunk-2373d2ad.1ecb3bd5.js","sourcesContent":["import { ApiService } from \"@/services/ApiServices\";\nimport VendorModel from './VendorModel';\n\nexport default class VendorService {\n    static baseUrl = \"vendors\";\n    static async getVendors() {\n        try {\n            const data = await ApiService.get(VendorService.baseUrl);\n            return data.results.data;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    static async newVendor(vendor: VendorModel) {\n        try {\n            const data = await ApiService.post(`${VendorService.baseUrl}`, vendor);\n            return data.data;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    static async updateVendor(vendor: VendorModel) {\n        try {\n            const data = await ApiService.put(`${VendorService.baseUrl}/${vendor._id}`, vendor);\n            return data.data;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n","<template>\n  <Modal\n    width=\"600px\"\n    :title=\"isEditing ? 'Update Vendor Information' : 'Add New Vendor'\"\n  >\n    <q-form @submit=\"onSubmit\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"vendor.name\"\n            label=\"Name\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"vendor.phone\"\n            label=\"Mobile No.\"\n            type=\"number\"\n            lazy-rules\n            mask=\"###########\"\n            :rules=\"[(val) => val > 0 || 'Please enter a valid mobile number']\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"vendor.address\"\n            label=\"Address\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"vendor.bankName\"\n            label=\"Bank Details\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"vendor.accountNo\"\n            label=\"Account No.\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            :disable=\"isEditing\"\n            v-model=\"vendor.openingBalance\"\n            label=\"Balance.\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 q-my-sm\">\n          <q-btn\n            type=\"submit\"\n            label=\"Submit\"\n            color=\"primary\"\n            class=\"full-width\"\n          />\n        </div>\n      </div>\n    </q-form>\n  </Modal>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport VendorModel from './VendorModel';\nimport VendorService from './VendorService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n\n  setup(_, context) {\n    const vendor = ref<VendorModel>({\n      name: '',\n      phone: '',\n      address: '',\n      bankName: '',\n      accountNo: '',\n      openingBalance: 0,\n    });\n\n    const isEditing = ref(false);\n\n    const setToEdit = (vendorData: VendorModel) => {\n      isEditing.value = true;\n      vendor.value._id = vendorData._id;\n      vendor.value.name = vendorData.name;\n      vendor.value.phone = vendorData.phone;\n      vendor.value.address = vendorData.address;\n      vendor.value.bankName = vendorData.bankName;\n      vendor.value.accountNo = vendorData.accountNo;\n    };\n\n    const resetForm = () => {\n      vendor.value._id = '';\n      vendor.value.name = '';\n      vendor.value.phone = '';\n      vendor.value.address = '';\n      vendor.value.bankName = '';\n      vendor.value.accountNo = '';\n      vendor.value.openingBalance = 0;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (vendor.value._id) {\n          await VendorService.updateVendor(vendor.value);\n        } else {\n          console.log('Add New Vendor');\n          await VendorService.newVendor(vendor.value);\n        }\n        console.log(vendor.value);\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      isEditing,\n      setToEdit,\n      vendor,\n    };\n  },\n});\n</script>\n\n<style></style>\n","\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport VendorModel from './VendorModel';\nimport VendorService from './VendorService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n\n  setup(_, context) {\n    const vendor = ref<VendorModel>({\n      name: '',\n      phone: '',\n      address: '',\n      bankName: '',\n      accountNo: '',\n      openingBalance: 0,\n    });\n\n    const isEditing = ref(false);\n\n    const setToEdit = (vendorData: VendorModel) => {\n      isEditing.value = true;\n      vendor.value._id = vendorData._id;\n      vendor.value.name = vendorData.name;\n      vendor.value.phone = vendorData.phone;\n      vendor.value.address = vendorData.address;\n      vendor.value.bankName = vendorData.bankName;\n      vendor.value.accountNo = vendorData.accountNo;\n    };\n\n    const resetForm = () => {\n      vendor.value._id = '';\n      vendor.value.name = '';\n      vendor.value.phone = '';\n      vendor.value.address = '';\n      vendor.value.bankName = '';\n      vendor.value.accountNo = '';\n      vendor.value.openingBalance = 0;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (vendor.value._id) {\n          await VendorService.updateVendor(vendor.value);\n        } else {\n          console.log('Add New Vendor');\n          await VendorService.newVendor(vendor.value);\n        }\n        console.log(vendor.value);\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      isEditing,\n      setToEdit,\n      vendor,\n    };\n  },\n});\n","import { render } from \"./NewVendorModal.vue?vue&type=template&id=63ff76c5\"\nimport script from \"./NewVendorModal.vue?vue&type=script&lang=ts\"\nexport * from \"./NewVendorModal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QBtn});\n","<template>\n  <Modal :title=\"isEditing ? 'Update Category' : 'Add New Category'\">\n    <q-form @submit=\"onSubmit\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"category.name\"\n            label=\"Category Name\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 q-my-sm\">\n          <q-btn\n            type=\"submit\"\n            label=\"Submit\"\n            color=\"primary\"\n            class=\"full-width\"\n          />\n        </div>\n      </div>\n    </q-form>\n  </Modal>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport CategoryModel from './CategoryModel';\nimport CategoryService from './CategoryService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  setup(_, context) {\n    const category = ref<CategoryModel>({\n      name: '',\n    });\n\n    const resetForm = () => {\n      category.value._id = '';\n      category.value.name = '';\n    };\n\n    const setToEdit = async (categoryData: CategoryModel) => {\n      category.value._id = categoryData._id;\n      category.value.name = categoryData.name;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (category.value._id) {\n          await CategoryService.updateCategory(category.value);\n        } else {\n          await CategoryService.newCategory(category.value);\n        }\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      category,\n    };\n  },\n});\n</script>\n\n<style></style>\n","\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport CategoryModel from './CategoryModel';\nimport CategoryService from './CategoryService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  setup(_, context) {\n    const category = ref<CategoryModel>({\n      name: '',\n    });\n\n    const resetForm = () => {\n      category.value._id = '';\n      category.value.name = '';\n    };\n\n    const setToEdit = async (categoryData: CategoryModel) => {\n      category.value._id = categoryData._id;\n      category.value.name = categoryData.name;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (category.value._id) {\n          await CategoryService.updateCategory(category.value);\n        } else {\n          await CategoryService.newCategory(category.value);\n        }\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      category,\n    };\n  },\n});\n","import { render } from \"./NewCategoryModal.vue?vue&type=template&id=442a62bd\"\nimport script from \"./NewCategoryModal.vue?vue&type=script&lang=ts\"\nexport * from \"./NewCategoryModal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QBtn});\n","<template>\n  <Modal\n    width=\"650px\"\n    :title=\"isEditing ? 'Update Product' : 'Add New Product'\"\n  >\n    <q-form @submit=\"onSubmit\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-input\n            filled\n            v-model=\"product.sku\"\n            label=\"Sku\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-input\n            filled\n            v-model=\"product.name\"\n            label=\"Product Name\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-select\n            filled\n            v-model=\"product.brand\"\n            :options=\"brands\"\n            label=\"Brands\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please enter a valid value',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-select\n            filled\n            v-model=\"product.category\"\n            :options=\"categories\"\n            label=\"Category\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please enter a valid value',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-input\n            filled\n            v-model=\"product.price\"\n            type=\"number\"\n            label=\"Price\"\n            lazy-rules\n            :rules=\"[(val) => val > 0 || 'Please enter a valid value']\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-input\n            filled\n            v-model=\"product.discount\"\n            type=\"number\"\n            label=\"Discount\"\n            lazy-rules\n            :rules=\"[(val) => val >= 0 || 'Please enter a valid value']\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-xs q-my-xs\">\n          <q-input\n            filled\n            v-model=\"product.costPrice\"\n            type=\"number\"\n            label=\"Cost Price\"\n            lazy-rules\n            :rules=\"[(val) => val > 0 || 'Please enter a valid value']\"\n          />\n        </div>\n        <div class=\"col-xs-12 q-my-xs\">\n          <q-btn\n            type=\"submit\"\n            label=\"Submit\"\n            color=\"primary\"\n            class=\"full-width\"\n          />\n        </div>\n      </div>\n    </q-form>\n  </Modal>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, onMounted } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport ProductModel from './ProductModel';\nimport CategoryModel from '../categories/CategoryModel';\nimport BrandModel from '../brands/BrandModel';\nimport ProductService from './ProductService';\nimport BrandsService from '../brands/BrandsService';\nimport CategoryService from '../categories/CategoryService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  setup(_, context) {\n    const brands = ref([]);\n    const categories = ref([]);\n\n    const product = ref<ProductModel>({\n      sku: '',\n      name: '',\n      brand: '',\n      category: '',\n      price: 0,\n      discount: 0,\n      quantity: 0,\n      costPrice: 0,\n    });\n\n    const resetForm = () => {\n      product.value._id = '';\n      product.value.sku = '';\n      product.value.name = '';\n      product.value.brand = '';\n      product.value.category = '';\n      product.value.price = 0;\n      product.value.discount = 0;\n      product.value.quantity = 0;\n      product.value.costPrice = 0;\n    };\n\n    const setToEdit = (productData: ProductModel) => {\n      product.value._id = productData._id;\n      product.value.sku = productData.sku;\n      product.value.name = productData.name;\n      product.value.brand = productData.brand;\n      product.value.category = productData.category;\n      product.value.price = productData.price;\n      product.value.discount = productData.discount;\n      product.value.quantity = productData.quantity;\n      product.value.costPrice = productData.costPrice;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (product.value._id) {\n          await ProductService.updateProduct(product.value);\n        } else {\n          await ProductService.newProducts(product.value);\n        }\n        console.log(product.value);\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    onMounted(async () => {\n      try {\n        const allBrands = await BrandsService.getBrands();\n        brands.value = allBrands.map((brand: BrandModel) => brand.name);\n        const allCategories = await CategoryService.getCategories();\n        categories.value = allCategories.map(\n          (category: CategoryModel) => category.name\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      setToEdit,\n      onSubmit,\n      resetForm,\n      product,\n      brands,\n      categories,\n    };\n  },\n});\n</script>\n\n<style></style>\n","\nimport { ref, defineComponent, onMounted } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport ProductModel from './ProductModel';\nimport CategoryModel from '../categories/CategoryModel';\nimport BrandModel from '../brands/BrandModel';\nimport ProductService from './ProductService';\nimport BrandsService from '../brands/BrandsService';\nimport CategoryService from '../categories/CategoryService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  setup(_, context) {\n    const brands = ref([]);\n    const categories = ref([]);\n\n    const product = ref<ProductModel>({\n      sku: '',\n      name: '',\n      brand: '',\n      category: '',\n      price: 0,\n      discount: 0,\n      quantity: 0,\n      costPrice: 0,\n    });\n\n    const resetForm = () => {\n      product.value._id = '';\n      product.value.sku = '';\n      product.value.name = '';\n      product.value.brand = '';\n      product.value.category = '';\n      product.value.price = 0;\n      product.value.discount = 0;\n      product.value.quantity = 0;\n      product.value.costPrice = 0;\n    };\n\n    const setToEdit = (productData: ProductModel) => {\n      product.value._id = productData._id;\n      product.value.sku = productData.sku;\n      product.value.name = productData.name;\n      product.value.brand = productData.brand;\n      product.value.category = productData.category;\n      product.value.price = productData.price;\n      product.value.discount = productData.discount;\n      product.value.quantity = productData.quantity;\n      product.value.costPrice = productData.costPrice;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (product.value._id) {\n          await ProductService.updateProduct(product.value);\n        } else {\n          await ProductService.newProducts(product.value);\n        }\n        console.log(product.value);\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    onMounted(async () => {\n      try {\n        const allBrands = await BrandsService.getBrands();\n        brands.value = allBrands.map((brand: BrandModel) => brand.name);\n        const allCategories = await CategoryService.getCategories();\n        categories.value = allCategories.map(\n          (category: CategoryModel) => category.name\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      setToEdit,\n      onSubmit,\n      resetForm,\n      product,\n      brands,\n      categories,\n    };\n  },\n});\n","import { render } from \"./NewProductModal.vue?vue&type=template&id=6aee9ac6\"\nimport script from \"./NewProductModal.vue?vue&type=script&lang=ts\"\nexport * from \"./NewProductModal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QSelect,QBtn});\n","<template>\n  <div class=\"create\">\n    <div class=\"row justify-center\">\n      <div class=\"col col-xs-12 col-sm-4 text-center q-my-md q-px-sm\">\n        <q-btn\n          @click=\"addNewProductModal = !addNewProductModal\"\n          label=\"Add New Product\"\n          color=\"primary\"\n          class=\"full-width\"\n        />\n      </div>\n      <div class=\"col col-xs-12 col-sm-4 text-center q-my-md q-px-sm\">\n        <q-btn\n          @click=\"addNewCategoryModal = !addNewCategoryModal\"\n          label=\"Add New Category\"\n          color=\"primary\"\n          class=\"full-width\"\n        />\n      </div>\n      <div class=\"col col-xs-12 col-sm-4 text-center q-my-md q-px-sm\">\n        <q-btn\n          @click=\"addNewBrandModal = !addNewBrandModal\"\n          label=\"Add New Brand\"\n          color=\"primary\"\n          class=\"full-width\"\n        />\n      </div>\n      <div class=\"col col-xs-12 col-sm-4 text-center q-my-md q-px-sm\">\n        <q-btn\n          @click=\"addNewCustomerModal = !addNewCustomerModal\"\n          label=\"Add New Customer\"\n          color=\"primary\"\n          class=\"full-width\"\n        />\n      </div>\n      <div class=\"col col-xs-12 col-sm-4 text-center q-my-md q-px-sm\">\n        <q-btn\n          @click=\"addNewVendorModal = !addNewVendorModal\"\n          label=\"Add New Vendor\"\n          color=\"primary\"\n          class=\"full-width\"\n        />\n      </div>\n      <div class=\"col col-xs-12 col-sm-4 text-center q-my-md q-px-sm\">\n        <q-btn\n          @click=\"addNewInvoiceModal = !addNewInvoiceModal\"\n          label=\"Add New Invoice\"\n          color=\"primary\"\n          class=\"full-width\"\n        />\n      </div>\n    </div>\n    <AddNewProduct v-model=\"addNewProductModal\" />\n    <AddNewCategory v-model=\"addNewCategoryModal\" />\n    <AddNewBrand v-model=\"addNewBrandModal\" />\n    <AddNewCustomer v-model=\"addNewCustomerModal\" />\n    <AddNewVendor v-model=\"addNewVendorModal\" />\n    <Dialog\n      v-model=\"addNewInvoiceModal\"\n      title=\"Create New Invoice\"\n      width=\"800px\"\n    >\n      <AddNewInvoice />\n    </Dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport AddNewProduct from '../domain/products/NewProductModal.vue';\nimport AddNewCategory from '../domain/categories/NewCategoryModal.vue';\nimport AddNewCustomer from '../domain/customers/NewCustomerModal.vue';\nimport AddNewBrand from '../domain/brands/NewBrandModal.vue';\nimport AddNewVendor from '../domain/vendors/NewVendorModal.vue';\nimport AddNewInvoice from '../domain/accounts/invoices/newInvoice.vue';\nimport Dialog from '../components/General/Modal.vue';\n\nexport default defineComponent({\n  components: {\n    AddNewCustomer,\n    AddNewCategory,\n    AddNewProduct,\n    AddNewInvoice,\n    AddNewVendor,\n    AddNewBrand,\n    Dialog,\n  },\n  setup() {\n    const addNewProductModal = ref(false);\n    const addNewCategoryModal = ref(false);\n    const addNewBrandModal = ref(false);\n    const addNewCustomerModal = ref(false);\n    const addNewVendorModal = ref(false);\n    const addNewInvoiceModal = ref(false);\n\n    return {\n      addNewProductModal,\n      addNewCategoryModal,\n      addNewCustomerModal,\n      addNewBrandModal,\n      addNewVendorModal,\n      addNewInvoiceModal,\n    };\n  },\n});\n</script>\n","\nimport { defineComponent, ref } from 'vue';\nimport AddNewProduct from '../domain/products/NewProductModal.vue';\nimport AddNewCategory from '../domain/categories/NewCategoryModal.vue';\nimport AddNewCustomer from '../domain/customers/NewCustomerModal.vue';\nimport AddNewBrand from '../domain/brands/NewBrandModal.vue';\nimport AddNewVendor from '../domain/vendors/NewVendorModal.vue';\nimport AddNewInvoice from '../domain/accounts/invoices/newInvoice.vue';\nimport Dialog from '../components/General/Modal.vue';\n\nexport default defineComponent({\n  components: {\n    AddNewCustomer,\n    AddNewCategory,\n    AddNewProduct,\n    AddNewInvoice,\n    AddNewVendor,\n    AddNewBrand,\n    Dialog,\n  },\n  setup() {\n    const addNewProductModal = ref(false);\n    const addNewCategoryModal = ref(false);\n    const addNewBrandModal = ref(false);\n    const addNewCustomerModal = ref(false);\n    const addNewVendorModal = ref(false);\n    const addNewInvoiceModal = ref(false);\n\n    return {\n      addNewProductModal,\n      addNewCategoryModal,\n      addNewCustomerModal,\n      addNewBrandModal,\n      addNewVendorModal,\n      addNewInvoiceModal,\n    };\n  },\n});\n","import { render } from \"./Create.vue?vue&type=template&id=ab955826\"\nimport script from \"./Create.vue?vue&type=script&lang=ts\"\nexport * from \"./Create.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn});\n","import { ApiService } from \"@/services/ApiServices\";\nimport BrandModel from \"./BrandModel\";\n\nexport default class BrandService {\n  static baseUrl = \"brands\";\n  static async getBrands() {\n    try {\n      const data = await ApiService.get(BrandService.baseUrl);\n      return data.results.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async newBrand(brand: BrandModel) {\n    try {\n      const data = await ApiService.post(`${BrandService.baseUrl}`, brand);\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async updateBrand(brand: BrandModel) {\n    try {\n      const data = await ApiService.put(\n        `${BrandService.baseUrl}/${brand._id}`,\n        brand\n      );\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<template>\n  <Modal\n    width=\"600px\"\n    :title=\"isEditing ? 'Update Customer Information' : 'Add Customer customer'\"\n  >\n    <q-form @submit=\"onSubmit\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"customer.name\"\n            label=\"Name\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"customer.phone\"\n            label=\"Mobile No.\"\n            type=\"number\"\n            lazy-rules\n            mask=\"###########\"\n            :rules=\"[(val) => val > 0 || 'Please enter a valid mobile number']\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"customer.address\"\n            label=\"Address\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"customer.bankName\"\n            label=\"Bank Details\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"customer.accountNo\"\n            label=\"Account No.\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 col-sm-6 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            :disable=\"isEditing\"\n            v-model=\"customer.openingBalance\"\n            label=\"Balance.\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 q-my-sm\">\n          <q-btn\n            type=\"submit\"\n            label=\"Submit\"\n            color=\"primary\"\n            class=\"full-width\"\n          />\n        </div>\n      </div>\n    </q-form>\n  </Modal>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport CustomerModel from './CustomerModel';\nimport CustomerService from './CustomerService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n\n  setup(_, context) {\n    const customer = ref<CustomerModel>({\n      name: '',\n      phone: '',\n      address: '',\n      bankName: '',\n      accountNo: '',\n      openingBalance: 0,\n    });\n\n    const isEditing = ref(false);\n\n    const setToEdit = (customerData: CustomerModel) => {\n      isEditing.value = true;\n      customer.value._id = customerData._id;\n      customer.value.name = customerData.name;\n      customer.value.phone = customerData.phone;\n      customer.value.address = customerData.address;\n      customer.value.bankName = customerData.bankName;\n      customer.value.accountNo = customerData.accountNo;\n    };\n\n    const resetForm = () => {\n      customer.value._id = '';\n      customer.value.name = '';\n      customer.value.phone = '';\n      customer.value.address = '';\n      customer.value.bankName = '';\n      customer.value.accountNo = '';\n      customer.value.openingBalance = 0;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (customer.value._id) {\n          await CustomerService.updateCustomer(customer.value);\n        } else {\n          console.log('Add New customer');\n          await CustomerService.newCustomer(customer.value);\n        }\n        console.log(customer.value);\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      isEditing,\n      setToEdit,\n      customer,\n    };\n  },\n});\n</script>\n","\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport CustomerModel from './CustomerModel';\nimport CustomerService from './CustomerService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n\n  setup(_, context) {\n    const customer = ref<CustomerModel>({\n      name: '',\n      phone: '',\n      address: '',\n      bankName: '',\n      accountNo: '',\n      openingBalance: 0,\n    });\n\n    const isEditing = ref(false);\n\n    const setToEdit = (customerData: CustomerModel) => {\n      isEditing.value = true;\n      customer.value._id = customerData._id;\n      customer.value.name = customerData.name;\n      customer.value.phone = customerData.phone;\n      customer.value.address = customerData.address;\n      customer.value.bankName = customerData.bankName;\n      customer.value.accountNo = customerData.accountNo;\n    };\n\n    const resetForm = () => {\n      customer.value._id = '';\n      customer.value.name = '';\n      customer.value.phone = '';\n      customer.value.address = '';\n      customer.value.bankName = '';\n      customer.value.accountNo = '';\n      customer.value.openingBalance = 0;\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (customer.value._id) {\n          await CustomerService.updateCustomer(customer.value);\n        } else {\n          console.log('Add New customer');\n          await CustomerService.newCustomer(customer.value);\n        }\n        console.log(customer.value);\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      isEditing,\n      setToEdit,\n      customer,\n    };\n  },\n});\n","import { render } from \"./NewCustomerModal.vue?vue&type=template&id=d04971ec\"\nimport script from \"./NewCustomerModal.vue?vue&type=script&lang=ts\"\nexport * from \"./NewCustomerModal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QBtn});\n","import { ApiService } from \"@/services/ApiServices\";\nimport CategoryModel from \"./CategoryModel\";\n\nexport default class CategoryService {\n  static baseUrl = \"categories\";\n  static async getCategories() {\n    try {\n      const data = await ApiService.get(CategoryService.baseUrl);\n      return data.results.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async newCategory(category: CategoryModel) {\n    try {\n      const data = await ApiService.post(`${CategoryService.baseUrl}`, category);\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async updateCategory(category: CategoryModel) {\n    try {\n      const data = await ApiService.put(\n        `${CategoryService.baseUrl}/${category._id}`,\n        category\n      );\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<template>\n  <Modal :title=\"isEditing ? 'Update Brand' : 'Add New Brand'\">\n    <q-form @submit=\"onSubmit\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 q-px-sm q-my-sm\">\n          <q-input\n            filled\n            v-model=\"brand.name\"\n            label=\"Brand Name\"\n            lazy-rules\n            :rules=\"[\n              (val) => (val && val.length > 0) || 'Please type something',\n            ]\"\n          />\n        </div>\n        <div class=\"col-xs-12 q-my-sm\">\n          <q-btn\n            type=\"submit\"\n            label=\"Submit\"\n            color=\"primary\"\n            class=\"full-width\"\n          />\n        </div>\n      </div>\n    </q-form>\n  </Modal>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport BrandModel from './BrandModel';\nimport BrandService from './BrandsService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  setup(_, context) {\n    const brand = ref<BrandModel>({\n      name: '',\n    });\n\n    const setToEdit = (brandData: BrandModel) => {\n      brand.value._id = brandData._id;\n      brand.value.name = brandData.name;\n    };\n\n    const resetForm = () => {\n      brand.value._id = '';\n      brand.value.name = '';\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (brand.value._id) {\n          await BrandService.updateBrand(brand.value);\n        } else {\n          await BrandService.newBrand(brand.value);\n        }\n        console.log(brand.value.name);\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error, '|error');\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      brand,\n    };\n  },\n});\n</script>\n\n<style></style>\n","\nimport { ref, defineComponent } from 'vue';\nimport Modal from '../../components/General/Modal.vue';\nimport BrandModel from './BrandModel';\nimport BrandService from './BrandsService';\n\nexport default defineComponent({\n  components: {\n    Modal,\n  },\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  setup(_, context) {\n    const brand = ref<BrandModel>({\n      name: '',\n    });\n\n    const setToEdit = (brandData: BrandModel) => {\n      brand.value._id = brandData._id;\n      brand.value.name = brandData.name;\n    };\n\n    const resetForm = () => {\n      brand.value._id = '';\n      brand.value.name = '';\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (brand.value._id) {\n          await BrandService.updateBrand(brand.value);\n        } else {\n          await BrandService.newBrand(brand.value);\n        }\n        console.log(brand.value.name);\n        context.emit('close');\n        resetForm();\n      } catch (error) {\n        console.log(error, '|error');\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      brand,\n    };\n  },\n});\n","import { render } from \"./NewBrandModal.vue?vue&type=template&id=76fbd77e\"\nimport script from \"./NewBrandModal.vue?vue&type=script&lang=ts\"\nexport * from \"./NewBrandModal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QBtn});\n","<template>\n  <q-dialog v-bind=\"$attrs\">\n    <q-card :style=\"`max-width: ${width}; width: 100%`\">\n      <q-card-section class=\"row items-center q-pb-none\">\n        <div class=\"text-h6\">{{ title }}</div>\n        <q-space />\n        <q-btn icon=\"close\" flat round dense v-close-popup />\n      </q-card-section>\n\n      <q-card-section>\n        <slot></slot>\n      </q-card-section>\n    </q-card>\n  </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => \"450px\",\n    },\n  },\n  setup() {},\n});\n</script>\n\n<style lang=\"scss\"></style>\n","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => \"450px\",\n    },\n  },\n  setup() {},\n});\n","import { h, defineComponent } from 'vue'\n\nconst space = h('div', { class: 'q-space' })\n\nexport default defineComponent({\n  name: 'QSpace',\n\n  setup () {\n    return () => space\n  }\n})\n","import { render } from \"./Modal.vue?vue&type=template&id=1cb2c8d7\"\nimport script from \"./Modal.vue?vue&type=script&lang=ts\"\nexport * from \"./Modal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';import ClosePopup from 'quasar/src/directives/ClosePopup.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn});qInstall(script, 'directives', {ClosePopup});\n"],"sourceRoot":""}