{"version":3,"sources":["webpack:///./src/domain/brands/NewBrandForm.vue","webpack:///./src/domain/brands/NewBrandForm.vue?c239","webpack:///./src/domain/brands/NewBrandForm.vue?fbed","webpack:///./node_modules/quasar/src/components/form/QForm.js","webpack:///./src/components/Layout/Modal.vue","webpack:///./src/components/Layout/Modal.vue?6662","webpack:///./src/components/Layout/Modal.vue?fe25","webpack:///./src/domain/brands/BrandList.vue","webpack:///./src/domain/brands/BrandList.vue?2d9c","webpack:///./src/domain/brands/BrandList.vue?f8ff","webpack:///./src/components/Layout/Modal.vue?8e4f","webpack:///./src/domain/brands/BrandsService.ts"],"names":["class","onSubmit","filled","brand","name","label","lazy-rules","rules","val","length","type","color","props","isEditing","Boolean","default","emits","setup","_","context","$q","setToEdit","brandData","value","_id","resetForm","updateBrand","notify","message","newBrand","emit","console","log","render","QForm","QInput","QBtn","defineComponent","autofocus","noErrorFocus","noResetFocus","greedy","Function","slots","vm","getCurrentInstance","rootRef","ref","validateIndex","registeredComponents","validate","shouldFocus","promises","focus","emitEvent","res","i","comp","valid","then","push","error","Promise","resolve","index","all","errors","filter","r","resetValidation","forEach","submit","evt","stopAndPrevent","target","reset","nextTick","addFocusFn","querySelector","Array","prototype","find","call","querySelectorAll","el","tabIndex","provide","formKey","bindComponent","vmProxy","unbindComponent","indexOf","splice","onMounted","Object","assign","proxy","getValidationComponents","h","onReset","hSlot","style","width","title","icon","flat","round","dense","$emit","modelValue","String","QCard","QCardSection","newBrandAction","isLoading","data","tableDef","actions","editBrand","row","brandModal","refreshList","components","NewBrandForm","Modal","Table","brandRef","PagedResultModel","TableModel","brands","getBrands","results","deleteBrand","id","BrandService","get","baseUrl","post","put"],"mappings":"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","file":"js/chunk-b756a8e8.3e4b3822.js","sourcesContent":["<template>\n  <q-form @submit=\"onSubmit\">\n    <div class=\"row\">\n      <div class=\"col-xs-12 q-px-sm q-my-sm\">\n        <q-input\n          filled\n          v-model=\"brand.name\"\n          label=\"Brand Name\"\n          lazy-rules\n          :rules=\"[(val) => (val && val.length > 0) || 'Please type something']\"\n        />\n      </div>\n      <div class=\"col-xs-12 q-my-sm\">\n        <q-btn\n          type=\"submit\"\n          label=\"Submit\"\n          color=\"primary\"\n          class=\"full-width\"\n        />\n      </div>\n    </div>\n  </q-form>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from 'quasar';\nimport { ref, defineComponent } from 'vue';\nimport BrandModel from './BrandModel';\nimport BrandService from './BrandsService';\n\nexport default defineComponent({\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  emits: ['close-modal'],\n  setup(_, context) {\n    const $q = useQuasar();\n    const brand = ref<BrandModel>({\n      name: '',\n    });\n\n    const setToEdit = (brandData: BrandModel) => {\n      brand.value._id = brandData._id;\n      brand.value.name = brandData.name;\n    };\n\n    const resetForm = () => {\n      brand.value._id = '';\n      brand.value.name = '';\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (brand.value._id) {\n          await BrandService.updateBrand(brand.value);\n          $q.notify({\n            color: 'primary',\n            message: 'This brand has been successfully updated!',\n          });\n        } else {\n          await BrandService.newBrand(brand.value);\n          $q.notify({\n            color: 'primary',\n            message: 'This brand has been successfully created!',\n          });\n        }\n        context.emit('close-modal');\n        resetForm();\n      } catch (error) {\n        $q.notify({\n          color: 'red',\n          message: 'An error occurred',\n        });\n        console.log(error, '|error');\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      brand,\n    };\n  },\n});\n</script>\n\n<style></style>\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { ref, defineComponent } from 'vue';\nimport BrandModel from './BrandModel';\nimport BrandService from './BrandsService';\n\nexport default defineComponent({\n  props: {\n    isEditing: {\n      type: Boolean,\n      default: () => false,\n    },\n  },\n  emits: ['close-modal'],\n  setup(_, context) {\n    const $q = useQuasar();\n    const brand = ref<BrandModel>({\n      name: '',\n    });\n\n    const setToEdit = (brandData: BrandModel) => {\n      brand.value._id = brandData._id;\n      brand.value.name = brandData.name;\n    };\n\n    const resetForm = () => {\n      brand.value._id = '';\n      brand.value.name = '';\n    };\n\n    const onSubmit = async () => {\n      try {\n        if (brand.value._id) {\n          await BrandService.updateBrand(brand.value);\n          $q.notify({\n            color: 'primary',\n            message: 'This brand has been successfully updated!',\n          });\n        } else {\n          await BrandService.newBrand(brand.value);\n          $q.notify({\n            color: 'primary',\n            message: 'This brand has been successfully created!',\n          });\n        }\n        context.emit('close-modal');\n        resetForm();\n      } catch (error) {\n        $q.notify({\n          color: 'red',\n          message: 'An error occurred',\n        });\n        console.log(error, '|error');\n      }\n    };\n\n    return {\n      onSubmit,\n      resetForm,\n      setToEdit,\n      brand,\n    };\n  },\n});\n","import { render } from \"./NewBrandForm.vue?vue&type=template&id=584a3d1c\"\nimport script from \"./NewBrandForm.vue?vue&type=script&lang=ts\"\nexport * from \"./NewBrandForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QForm,QInput,QBtn});\n","import { h, defineComponent, ref, onMounted, getCurrentInstance, nextTick, provide } from 'vue'\n\nimport { stopAndPrevent } from '../../utils/event.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { formKey } from '../../utils/private/symbols.js'\n\nexport default defineComponent({\n  name: 'QForm',\n\n  props: {\n    autofocus: Boolean,\n    noErrorFocus: Boolean,\n    noResetFocus: Boolean,\n    greedy: Boolean,\n\n    onSubmit: Function\n  },\n\n  emits: [ 'reset', 'validation-success', 'validation-error' ],\n\n  setup (props, { slots, emit }) {\n    const vm = getCurrentInstance()\n    const rootRef = ref(null)\n\n    let validateIndex = 0\n    const registeredComponents = []\n\n    function validate (shouldFocus) {\n      const promises = []\n      const focus = typeof shouldFocus === 'boolean'\n        ? shouldFocus\n        : props.noErrorFocus !== true\n\n      validateIndex++\n\n      const emitEvent = (res, ref) => {\n        emit('validation-' + (res === true ? 'success' : 'error'), ref)\n      }\n\n      for (let i = 0; i < registeredComponents.length; i++) {\n        const comp = registeredComponents[ i ]\n        const valid = comp.validate()\n\n        if (typeof valid.then === 'function') {\n          promises.push(\n            valid.then(\n              valid => ({ valid, comp }),\n              error => ({ valid: false, comp, error })\n            )\n          )\n        }\n        else if (valid !== true) {\n          if (props.greedy === false) {\n            emitEvent(false, comp)\n\n            if (focus === true && typeof comp.focus === 'function') {\n              comp.focus()\n            }\n\n            return Promise.resolve(false)\n          }\n\n          promises.push({ valid: false, comp })\n        }\n      }\n\n      if (promises.length === 0) {\n        emitEvent(true)\n        return Promise.resolve(true)\n      }\n\n      const index = validateIndex\n\n      return Promise.all(promises).then(\n        res => {\n          if (index === validateIndex) {\n            const errors = res.filter(r => r.valid !== true)\n\n            if (errors.length === 0) {\n              emitEvent(true)\n              return true\n            }\n\n            const { valid, comp } = errors[ 0 ]\n\n            emitEvent(false, comp)\n\n            if (\n              focus === true\n              && valid !== true\n              && typeof comp.focus === 'function'\n            ) {\n              comp.focus()\n            }\n\n            return false\n          }\n        }\n      )\n    }\n\n    function resetValidation () {\n      validateIndex++\n\n      registeredComponents.forEach(comp => {\n        typeof comp.resetValidation === 'function' && comp.resetValidation()\n      })\n    }\n\n    function submit (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      validate().then(val => {\n        if (val === true) {\n          if (props.onSubmit !== void 0) {\n            emit('submit', evt)\n          }\n          else if (evt !== void 0 && evt.target !== void 0 && typeof evt.target.submit === 'function') {\n            evt.target.submit()\n          }\n        }\n      })\n    }\n\n    function reset (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      emit('reset')\n\n      nextTick(() => { // allow userland to reset values before\n        resetValidation()\n        if (props.autofocus === true && props.noResetFocus !== true) {\n          focus()\n        }\n      })\n    }\n\n    function focus () {\n      addFocusFn(() => {\n        if (rootRef.value === null) { return }\n\n        const target = rootRef.value.querySelector('[autofocus], [data-autofocus]')\n          || Array.prototype.find.call(rootRef.value.querySelectorAll('[tabindex]'), el => el.tabIndex > -1)\n\n        target !== null && target !== void 0 && target.focus()\n      })\n    }\n\n    provide(formKey, {\n      bindComponent (vmProxy) {\n        registeredComponents.push(vmProxy)\n      },\n\n      unbindComponent (vmProxy) {\n        const index = registeredComponents.indexOf(vmProxy)\n        if (index > -1) {\n          registeredComponents.splice(index, 1)\n        }\n      }\n    })\n\n    onMounted(() => {\n      props.autofocus === true && focus()\n    })\n\n    // expose public methods\n    Object.assign(vm.proxy, {\n      validate,\n      resetValidation,\n      submit,\n      reset,\n      focus,\n      getValidationComponents: () => registeredComponents\n    })\n\n    return () => h('form', {\n      class: 'q-form',\n      ref: rootRef,\n      onSubmit: submit,\n      onReset: reset\n    }, hSlot(slots.default))\n  }\n})\n","<template>\n  <div class=\"custom-dialog\">\n    <q-card v-show=\"modelValue\" class=\"modal\">\n      <div\n        :style=\"`max-width: ${width}; width: 100%;`\"\n        class=\"row items-center q-pb-none modal-content\"\n      >\n        <q-card-section class=\"full-width\">\n          <div class=\"row full-width justify-between\">\n            <div class=\"text-h6 q-my-none\">{{ title }}</div>\n            <q-btn icon=\"close\" flat round dense @click=\"$emit('close')\" />\n          </div>\n        </q-card-section>\n      </div>\n\n      <div\n        :style=\"`max-width: ${width}; width: 100%;`\"\n        class=\"row items-center q-pb-none modal-content\"\n      >\n        <q-card-section class=\"full-width\">\n          <slot></slot>\n        </q-card-section>\n      </div>\n    </q-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => '650px',\n    },\n    modelValue: {\n      type: Boolean\n    }\n  },\n  emits: ['close'],\n});\n</script>\n\n<style lang=\"scss\">\n.custom-dialog {\n  .modal {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    position: fixed;\n    z-index: 3000;\n\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(0, 0, 0);\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n\n  .q-card__section--vert {\n    padding: 0;\n  }\n\n  /* Modal Content/Box */\n  .modal-content {\n    background-color: #fefefe;\n    margin: 0 auto; /* 15% from the top and centered */\n    padding: 20px;\n    max-height: 500px;\n    overflow: auto;\n    border: 1px solid #888;\n  }\n\n  /* The Close Button */\n  .close {\n    color: #aaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n  }\n\n  .close:hover,\n  .close:focus {\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: {\n    title: {\n      type: String,\n    },\n    width: {\n      type: String,\n      default: () => '650px',\n    },\n    modelValue: {\n      type: Boolean\n    }\n  },\n  emits: ['close'],\n});\n","import { render } from \"./Modal.vue?vue&type=template&id=6b50f288\"\nimport script from \"./Modal.vue?vue&type=script&lang=ts\"\nexport * from \"./Modal.vue?vue&type=script&lang=ts\"\n\nimport \"./Modal.vue?vue&type=style&index=0&id=6b50f288&lang=scss\"\nscript.render = render\n\nexport default script\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCard,QCardSection,QBtn});\n","<template>\n  <div>\n    <div class=\"q-pa-md\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-6 text-left\">\n          <h5 class=\"q-my-sm\">Brand List</h5>\n        </div>\n        <div class=\"col-xs-12 col-sm-6 text-right\">\n          <q-btn\n            @click=\"newBrandAction\"\n            label=\"Add New Brand\"\n            color=\"primary\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <Table\n          class=\"full-width\"\n          :isLoading=\"isLoading\"\n          :data=\"data\"\n          :tableDef=\"tableDef\"\n        >\n          <template #actions=\"{ props }\">\n            <div class=\"row\">\n              <q-btn\n                class=\"q-pa-none\"\n                flat\n                round\n                color=\"primary\"\n                icon=\"edit\"\n                @click=\"editBrand(props.row)\"\n              />\n            </div>\n          </template>\n        </Table>\n      </div>\n    </div>\n    <modal\n      v-model=\"brandModal\"\n      @close=\"brandModal = false\"\n      name=\"Add New Brand\"\n      :title=\"isEditing ? 'Update Brand' : 'Add New Brand'\"\n    >\n      <NewBrandForm\n        ref=\"brandRef\"\n        :isEditing=\"isEditing\"\n        @close=\"refreshList\"\n      />\n    </modal>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, onMounted } from 'vue';\nimport Modal from '../../components/Layout/Modal.vue';\nimport Column from '../../components/General/Table/ColumnModel';\nimport TableModel from '../../components/General/Table/TableModel';\nimport PagedResultModel from '../../interfaces/PagedResultModel';\nimport Table from '../../components/General/Table/Table.vue';\n// import BrandCard from './BrandCard.vue';\nimport BrandModel from './BrandModel';\nimport BrandService from './BrandsService';\nimport NewBrandForm from './NewBrandForm.vue';\n\nexport default defineComponent({\n  components: {\n    // BrandCard,\n    NewBrandForm,\n    Modal,\n    Table,\n  },\n  setup() {\n    const brandModal = ref(false);\n    const brandRef = ref();\n    const isEditing = ref(false);\n    const isLoading = ref(true);\n    const data = ref<PagedResultModel<BrandModel>>(\n      new PagedResultModel<BrandModel>()\n    );\n    const tableDef = ref<TableModel>(\n      new TableModel([\n        new Column('_id', 'ID', true),\n        new Column('name', 'Name', true),\n        new Column('actions', 'Actions', false, true),\n      ])\n    );\n\n    const brands = ref<BrandModel[]>([]);\n\n    const getBrands = async () => {\n      try {\n        isLoading.value = true;\n        brands.value = await BrandService.getBrands();\n        data.value.results = brands.value;\n        isLoading.value = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const newBrandAction = () => {\n      isEditing.value = false;\n      brandRef.value.resetForm();\n      brandModal.value = true;\n    };\n\n    const deleteBrand = async (id: string) => {\n      console.log(`Delete Brand ${id}`);\n    };\n\n    const editBrand = async (brand: BrandModel) => {\n      console.log(brand);\n\n      isEditing.value = true;\n      brandRef.value.setToEdit(brand);\n      brandModal.value = true;\n    };\n\n    const refreshList = async () => {\n      console.log('reset-list');\n      getBrands();\n      brandModal.value = !brandModal.value;\n    };\n\n    onMounted(async () => {\n      try {\n        getBrands();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      brands,\n      brandRef,\n      data,\n      tableDef,\n      isLoading,\n      editBrand,\n      isEditing,\n      brandModal,\n      deleteBrand,\n      refreshList,\n      newBrandAction,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\"></style>\n","\nimport { ref, defineComponent, onMounted } from 'vue';\nimport Modal from '../../components/Layout/Modal.vue';\nimport Column from '../../components/General/Table/ColumnModel';\nimport TableModel from '../../components/General/Table/TableModel';\nimport PagedResultModel from '../../interfaces/PagedResultModel';\nimport Table from '../../components/General/Table/Table.vue';\n// import BrandCard from './BrandCard.vue';\nimport BrandModel from './BrandModel';\nimport BrandService from './BrandsService';\nimport NewBrandForm from './NewBrandForm.vue';\n\nexport default defineComponent({\n  components: {\n    // BrandCard,\n    NewBrandForm,\n    Modal,\n    Table,\n  },\n  setup() {\n    const brandModal = ref(false);\n    const brandRef = ref();\n    const isEditing = ref(false);\n    const isLoading = ref(true);\n    const data = ref<PagedResultModel<BrandModel>>(\n      new PagedResultModel<BrandModel>()\n    );\n    const tableDef = ref<TableModel>(\n      new TableModel([\n        new Column('_id', 'ID', true),\n        new Column('name', 'Name', true),\n        new Column('actions', 'Actions', false, true),\n      ])\n    );\n\n    const brands = ref<BrandModel[]>([]);\n\n    const getBrands = async () => {\n      try {\n        isLoading.value = true;\n        brands.value = await BrandService.getBrands();\n        data.value.results = brands.value;\n        isLoading.value = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const newBrandAction = () => {\n      isEditing.value = false;\n      brandRef.value.resetForm();\n      brandModal.value = true;\n    };\n\n    const deleteBrand = async (id: string) => {\n      console.log(`Delete Brand ${id}`);\n    };\n\n    const editBrand = async (brand: BrandModel) => {\n      console.log(brand);\n\n      isEditing.value = true;\n      brandRef.value.setToEdit(brand);\n      brandModal.value = true;\n    };\n\n    const refreshList = async () => {\n      console.log('reset-list');\n      getBrands();\n      brandModal.value = !brandModal.value;\n    };\n\n    onMounted(async () => {\n      try {\n        getBrands();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    return {\n      brands,\n      brandRef,\n      data,\n      tableDef,\n      isLoading,\n      editBrand,\n      isEditing,\n      brandModal,\n      deleteBrand,\n      refreshList,\n      newBrandAction,\n    };\n  },\n});\n","import { render } from \"./BrandList.vue?vue&type=template&id=bda0499e\"\nimport script from \"./BrandList.vue?vue&type=script&lang=ts\"\nexport * from \"./BrandList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--0-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./Modal.vue?vue&type=style&index=0&id=6b50f288&lang=scss\"","import { ApiService } from \"@/services/ApiServices\";\nimport BrandModel from \"./BrandModel\";\n\nexport default class BrandService {\n  static baseUrl = \"brands\";\n  static async getBrands() {\n    try {\n      const data = await ApiService.get(BrandService.baseUrl);\n      return data.results.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async newBrand(brand: BrandModel) {\n    try {\n      const data = await ApiService.post(`${BrandService.baseUrl}`, brand);\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  static async updateBrand(brand: BrandModel) {\n    try {\n      const data = await ApiService.put(\n        `${BrandService.baseUrl}/${brand._id}`,\n        brand\n      );\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"],"sourceRoot":""}